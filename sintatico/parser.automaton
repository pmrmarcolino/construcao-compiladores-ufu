State 0:
prog' -> . prog [ # ]
-- On PROGRAM shift to state 1
-- On prog shift to state 4
-- On declaracao_init shift to state 5

State 1:
declaracao_init -> PROGRAM . ID PTVIRG [ VAR FUNCTION AESCOP ]
-- On ID shift to state 2

State 2:
declaracao_init -> PROGRAM ID . PTVIRG [ VAR FUNCTION AESCOP ]
-- On PTVIRG shift to state 3

State 3:
declaracao_init -> PROGRAM ID PTVIRG . [ VAR FUNCTION AESCOP ]
-- On VAR reduce production declaracao_init -> PROGRAM ID PTVIRG 
-- On FUNCTION reduce production declaracao_init -> PROGRAM ID PTVIRG 
-- On AESCOP reduce production declaracao_init -> PROGRAM ID PTVIRG 

State 4:
prog' -> prog . [ # ]
-- On # accept prog

State 5:
prog -> declaracao_init . option(declaracao_func) option(declaracao_var_block) block_comando EOF [ # ]
-- On FUNCTION shift to state 6
-- On option(declaracao_func) shift to state 165
-- On declaracao_func shift to state 180
-- On VAR reduce production option(declaracao_func) -> 
-- On AESCOP reduce production option(declaracao_func) -> 

State 6:
declaracao_func -> FUNCTION . ID nonempty_list(argumentos) DPTS tipo_nomenclatura PTVIRG block_comando [ VAR AESCOP ]
-- On ID shift to state 7

State 7:
declaracao_func -> FUNCTION ID . nonempty_list(argumentos) DPTS tipo_nomenclatura PTVIRG block_comando [ VAR AESCOP ]
-- On APAR shift to state 8
-- On nonempty_list(argumentos) shift to state 21
-- On argumentos shift to state 163

State 8:
argumentos -> APAR . separated_nonempty_list(VIRG,ID) DPTS tipo_nomenclatura FPAR [ DPTS APAR ]
-- On ID shift to state 9
-- On separated_nonempty_list(VIRG,ID) shift to state 12

State 9:
separated_nonempty_list(VIRG,ID) -> ID . [ DPTS ]
separated_nonempty_list(VIRG,ID) -> ID . VIRG separated_nonempty_list(VIRG,ID) [ DPTS ]
-- On VIRG shift to state 10
-- On DPTS reduce production separated_nonempty_list(VIRG,ID) -> ID 

State 10:
separated_nonempty_list(VIRG,ID) -> ID VIRG . separated_nonempty_list(VIRG,ID) [ DPTS ]
-- On ID shift to state 9
-- On separated_nonempty_list(VIRG,ID) shift to state 11

State 11:
separated_nonempty_list(VIRG,ID) -> ID VIRG separated_nonempty_list(VIRG,ID) . [ DPTS ]
-- On DPTS reduce production separated_nonempty_list(VIRG,ID) -> ID VIRG separated_nonempty_list(VIRG,ID) 

State 12:
argumentos -> APAR separated_nonempty_list(VIRG,ID) . DPTS tipo_nomenclatura FPAR [ DPTS APAR ]
-- On DPTS shift to state 13

State 13:
argumentos -> APAR separated_nonempty_list(VIRG,ID) DPTS . tipo_nomenclatura FPAR [ DPTS APAR ]
-- On STRING shift to state 14
-- On REAL shift to state 15
-- On INTEIRO shift to state 16
-- On CHAR shift to state 17
-- On BOOLEANO shift to state 18
-- On tipo_nomenclatura shift to state 19

State 14:
tipo_nomenclatura -> STRING . [ PTVIRG FPAR ]
-- On PTVIRG reduce production tipo_nomenclatura -> STRING 
-- On FPAR reduce production tipo_nomenclatura -> STRING 

State 15:
tipo_nomenclatura -> REAL . [ PTVIRG FPAR ]
-- On PTVIRG reduce production tipo_nomenclatura -> REAL 
-- On FPAR reduce production tipo_nomenclatura -> REAL 

State 16:
tipo_nomenclatura -> INTEIRO . [ PTVIRG FPAR ]
-- On PTVIRG reduce production tipo_nomenclatura -> INTEIRO 
-- On FPAR reduce production tipo_nomenclatura -> INTEIRO 

State 17:
tipo_nomenclatura -> CHAR . [ PTVIRG FPAR ]
-- On PTVIRG reduce production tipo_nomenclatura -> CHAR 
-- On FPAR reduce production tipo_nomenclatura -> CHAR 

State 18:
tipo_nomenclatura -> BOOLEANO . [ PTVIRG FPAR ]
-- On PTVIRG reduce production tipo_nomenclatura -> BOOLEANO 
-- On FPAR reduce production tipo_nomenclatura -> BOOLEANO 

State 19:
argumentos -> APAR separated_nonempty_list(VIRG,ID) DPTS tipo_nomenclatura . FPAR [ DPTS APAR ]
-- On FPAR shift to state 20

State 20:
argumentos -> APAR separated_nonempty_list(VIRG,ID) DPTS tipo_nomenclatura FPAR . [ DPTS APAR ]
-- On DPTS reduce production argumentos -> APAR separated_nonempty_list(VIRG,ID) DPTS tipo_nomenclatura FPAR 
-- On APAR reduce production argumentos -> APAR separated_nonempty_list(VIRG,ID) DPTS tipo_nomenclatura FPAR 

State 21:
declaracao_func -> FUNCTION ID nonempty_list(argumentos) . DPTS tipo_nomenclatura PTVIRG block_comando [ VAR AESCOP ]
-- On DPTS shift to state 22

State 22:
declaracao_func -> FUNCTION ID nonempty_list(argumentos) DPTS . tipo_nomenclatura PTVIRG block_comando [ VAR AESCOP ]
-- On STRING shift to state 14
-- On REAL shift to state 15
-- On INTEIRO shift to state 16
-- On CHAR shift to state 17
-- On BOOLEANO shift to state 18
-- On tipo_nomenclatura shift to state 23

State 23:
declaracao_func -> FUNCTION ID nonempty_list(argumentos) DPTS tipo_nomenclatura . PTVIRG block_comando [ VAR AESCOP ]
-- On PTVIRG shift to state 24

State 24:
declaracao_func -> FUNCTION ID nonempty_list(argumentos) DPTS tipo_nomenclatura PTVIRG . block_comando [ VAR AESCOP ]
-- On AESCOP shift to state 25
-- On block_comando shift to state 162

State 25:
block_comando -> AESCOP . list(comando) FESCOP [ VAR EOF AESCOP ]
-- On WRITELN shift to state 26
-- On WRITE shift to state 42
-- On WHILE shift to state 46
-- On READLN shift to state 97
-- On READ shift to state 101
-- On IF shift to state 105
-- On ID shift to state 109
-- On FOR shift to state 118
-- On CASE shift to state 124
-- On list(comando) shift to state 158
-- On comando_while shift to state 130
-- On comando_se shift to state 131
-- On comando_saida shift to state 132
-- On comando_for shift to state 134
-- On comando_entrada shift to state 135
-- On comando_case shift to state 137
-- On comando_atribuicao shift to state 138
-- On comando shift to state 160
-- On FESCOP reduce production list(comando) -> 

State 26:
comando_saida -> WRITELN . APAR separated_nonempty_list(VIRG,entrada) FPAR [ PTVIRG ]
-- On APAR shift to state 27

State 27:
comando_saida -> WRITELN APAR . separated_nonempty_list(VIRG,entrada) FPAR [ PTVIRG ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 32
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On separated_nonempty_list(VIRG,entrada) shift to state 37
-- On entrada shift to state 39

State 28:
tipo_bool -> TRUE . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DPTS DO DIV DIF CASE ]
-- On WRITELN reduce production tipo_bool -> TRUE 
-- On WRITE reduce production tipo_bool -> TRUE 
-- On WHILE reduce production tipo_bool -> TRUE 
-- On VIRG reduce production tipo_bool -> TRUE 
-- On TRUE reduce production tipo_bool -> TRUE 
-- On TO reduce production tipo_bool -> TRUE 
-- On THEN reduce production tipo_bool -> TRUE 
-- On READLN reduce production tipo_bool -> TRUE 
-- On READ reduce production tipo_bool -> TRUE 
-- On PTVIRG reduce production tipo_bool -> TRUE 
-- On OULOG reduce production tipo_bool -> TRUE 
-- On MULT reduce production tipo_bool -> TRUE 
-- On MENOS reduce production tipo_bool -> TRUE 
-- On MENORIGUAL reduce production tipo_bool -> TRUE 
-- On MENOR reduce production tipo_bool -> TRUE 
-- On MAIS reduce production tipo_bool -> TRUE 
-- On MAIORIGUAL reduce production tipo_bool -> TRUE 
-- On MAIOR reduce production tipo_bool -> TRUE 
-- On LITSTRING reduce production tipo_bool -> TRUE 
-- On LITCHAR reduce production tipo_bool -> TRUE 
-- On INT reduce production tipo_bool -> TRUE 
-- On IGUAL reduce production tipo_bool -> TRUE 
-- On IF reduce production tipo_bool -> TRUE 
-- On ID reduce production tipo_bool -> TRUE 
-- On FPAR reduce production tipo_bool -> TRUE 
-- On FOR reduce production tipo_bool -> TRUE 
-- On FLOAT reduce production tipo_bool -> TRUE 
-- On FESCOP reduce production tipo_bool -> TRUE 
-- On FALSE reduce production tipo_bool -> TRUE 
-- On ELOG reduce production tipo_bool -> TRUE 
-- On DPTS reduce production tipo_bool -> TRUE 
-- On DO reduce production tipo_bool -> TRUE 
-- On DIV reduce production tipo_bool -> TRUE 
-- On DIF reduce production tipo_bool -> TRUE 
-- On CASE reduce production tipo_bool -> TRUE 

State 29:
tipo_primitivo -> LITSTRING . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DPTS DO DIV DIF CASE ]
-- On WRITELN reduce production tipo_primitivo -> LITSTRING 
-- On WRITE reduce production tipo_primitivo -> LITSTRING 
-- On WHILE reduce production tipo_primitivo -> LITSTRING 
-- On VIRG reduce production tipo_primitivo -> LITSTRING 
-- On TRUE reduce production tipo_primitivo -> LITSTRING 
-- On TO reduce production tipo_primitivo -> LITSTRING 
-- On THEN reduce production tipo_primitivo -> LITSTRING 
-- On READLN reduce production tipo_primitivo -> LITSTRING 
-- On READ reduce production tipo_primitivo -> LITSTRING 
-- On PTVIRG reduce production tipo_primitivo -> LITSTRING 
-- On OULOG reduce production tipo_primitivo -> LITSTRING 
-- On MULT reduce production tipo_primitivo -> LITSTRING 
-- On MENOS reduce production tipo_primitivo -> LITSTRING 
-- On MENORIGUAL reduce production tipo_primitivo -> LITSTRING 
-- On MENOR reduce production tipo_primitivo -> LITSTRING 
-- On MAIS reduce production tipo_primitivo -> LITSTRING 
-- On MAIORIGUAL reduce production tipo_primitivo -> LITSTRING 
-- On MAIOR reduce production tipo_primitivo -> LITSTRING 
-- On LITSTRING reduce production tipo_primitivo -> LITSTRING 
-- On LITCHAR reduce production tipo_primitivo -> LITSTRING 
-- On INT reduce production tipo_primitivo -> LITSTRING 
-- On IGUAL reduce production tipo_primitivo -> LITSTRING 
-- On IF reduce production tipo_primitivo -> LITSTRING 
-- On ID reduce production tipo_primitivo -> LITSTRING 
-- On FPAR reduce production tipo_primitivo -> LITSTRING 
-- On FOR reduce production tipo_primitivo -> LITSTRING 
-- On FLOAT reduce production tipo_primitivo -> LITSTRING 
-- On FESCOP reduce production tipo_primitivo -> LITSTRING 
-- On FALSE reduce production tipo_primitivo -> LITSTRING 
-- On ELOG reduce production tipo_primitivo -> LITSTRING 
-- On DPTS reduce production tipo_primitivo -> LITSTRING 
-- On DO reduce production tipo_primitivo -> LITSTRING 
-- On DIV reduce production tipo_primitivo -> LITSTRING 
-- On DIF reduce production tipo_primitivo -> LITSTRING 
-- On CASE reduce production tipo_primitivo -> LITSTRING 

State 30:
tipo_primitivo -> LITCHAR . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DPTS DO DIV DIF CASE ]
-- On WRITELN reduce production tipo_primitivo -> LITCHAR 
-- On WRITE reduce production tipo_primitivo -> LITCHAR 
-- On WHILE reduce production tipo_primitivo -> LITCHAR 
-- On VIRG reduce production tipo_primitivo -> LITCHAR 
-- On TRUE reduce production tipo_primitivo -> LITCHAR 
-- On TO reduce production tipo_primitivo -> LITCHAR 
-- On THEN reduce production tipo_primitivo -> LITCHAR 
-- On READLN reduce production tipo_primitivo -> LITCHAR 
-- On READ reduce production tipo_primitivo -> LITCHAR 
-- On PTVIRG reduce production tipo_primitivo -> LITCHAR 
-- On OULOG reduce production tipo_primitivo -> LITCHAR 
-- On MULT reduce production tipo_primitivo -> LITCHAR 
-- On MENOS reduce production tipo_primitivo -> LITCHAR 
-- On MENORIGUAL reduce production tipo_primitivo -> LITCHAR 
-- On MENOR reduce production tipo_primitivo -> LITCHAR 
-- On MAIS reduce production tipo_primitivo -> LITCHAR 
-- On MAIORIGUAL reduce production tipo_primitivo -> LITCHAR 
-- On MAIOR reduce production tipo_primitivo -> LITCHAR 
-- On LITSTRING reduce production tipo_primitivo -> LITCHAR 
-- On LITCHAR reduce production tipo_primitivo -> LITCHAR 
-- On INT reduce production tipo_primitivo -> LITCHAR 
-- On IGUAL reduce production tipo_primitivo -> LITCHAR 
-- On IF reduce production tipo_primitivo -> LITCHAR 
-- On ID reduce production tipo_primitivo -> LITCHAR 
-- On FPAR reduce production tipo_primitivo -> LITCHAR 
-- On FOR reduce production tipo_primitivo -> LITCHAR 
-- On FLOAT reduce production tipo_primitivo -> LITCHAR 
-- On FESCOP reduce production tipo_primitivo -> LITCHAR 
-- On FALSE reduce production tipo_primitivo -> LITCHAR 
-- On ELOG reduce production tipo_primitivo -> LITCHAR 
-- On DPTS reduce production tipo_primitivo -> LITCHAR 
-- On DO reduce production tipo_primitivo -> LITCHAR 
-- On DIV reduce production tipo_primitivo -> LITCHAR 
-- On DIF reduce production tipo_primitivo -> LITCHAR 
-- On CASE reduce production tipo_primitivo -> LITCHAR 

State 31:
tipo_primitivo -> INT . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DPTS DO DIV DIF CASE ]
-- On WRITELN reduce production tipo_primitivo -> INT 
-- On WRITE reduce production tipo_primitivo -> INT 
-- On WHILE reduce production tipo_primitivo -> INT 
-- On VIRG reduce production tipo_primitivo -> INT 
-- On TRUE reduce production tipo_primitivo -> INT 
-- On TO reduce production tipo_primitivo -> INT 
-- On THEN reduce production tipo_primitivo -> INT 
-- On READLN reduce production tipo_primitivo -> INT 
-- On READ reduce production tipo_primitivo -> INT 
-- On PTVIRG reduce production tipo_primitivo -> INT 
-- On OULOG reduce production tipo_primitivo -> INT 
-- On MULT reduce production tipo_primitivo -> INT 
-- On MENOS reduce production tipo_primitivo -> INT 
-- On MENORIGUAL reduce production tipo_primitivo -> INT 
-- On MENOR reduce production tipo_primitivo -> INT 
-- On MAIS reduce production tipo_primitivo -> INT 
-- On MAIORIGUAL reduce production tipo_primitivo -> INT 
-- On MAIOR reduce production tipo_primitivo -> INT 
-- On LITSTRING reduce production tipo_primitivo -> INT 
-- On LITCHAR reduce production tipo_primitivo -> INT 
-- On INT reduce production tipo_primitivo -> INT 
-- On IGUAL reduce production tipo_primitivo -> INT 
-- On IF reduce production tipo_primitivo -> INT 
-- On ID reduce production tipo_primitivo -> INT 
-- On FPAR reduce production tipo_primitivo -> INT 
-- On FOR reduce production tipo_primitivo -> INT 
-- On FLOAT reduce production tipo_primitivo -> INT 
-- On FESCOP reduce production tipo_primitivo -> INT 
-- On FALSE reduce production tipo_primitivo -> INT 
-- On ELOG reduce production tipo_primitivo -> INT 
-- On DPTS reduce production tipo_primitivo -> INT 
-- On DO reduce production tipo_primitivo -> INT 
-- On DIV reduce production tipo_primitivo -> INT 
-- On DIF reduce production tipo_primitivo -> INT 
-- On CASE reduce production tipo_primitivo -> INT 

State 32:
entrada -> ID . [ VIRG THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DO DIV DIF ]
-- On VIRG reduce production entrada -> ID 
-- On THEN reduce production entrada -> ID 
-- On OULOG reduce production entrada -> ID 
-- On MULT reduce production entrada -> ID 
-- On MENOS reduce production entrada -> ID 
-- On MENORIGUAL reduce production entrada -> ID 
-- On MENOR reduce production entrada -> ID 
-- On MAIS reduce production entrada -> ID 
-- On MAIORIGUAL reduce production entrada -> ID 
-- On MAIOR reduce production entrada -> ID 
-- On IGUAL reduce production entrada -> ID 
-- On FPAR reduce production entrada -> ID 
-- On ELOG reduce production entrada -> ID 
-- On DO reduce production entrada -> ID 
-- On DIV reduce production entrada -> ID 
-- On DIF reduce production entrada -> ID 

State 33:
tipo_primitivo -> FLOAT . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DPTS DO DIV DIF CASE ]
-- On WRITELN reduce production tipo_primitivo -> FLOAT 
-- On WRITE reduce production tipo_primitivo -> FLOAT 
-- On WHILE reduce production tipo_primitivo -> FLOAT 
-- On VIRG reduce production tipo_primitivo -> FLOAT 
-- On TRUE reduce production tipo_primitivo -> FLOAT 
-- On TO reduce production tipo_primitivo -> FLOAT 
-- On THEN reduce production tipo_primitivo -> FLOAT 
-- On READLN reduce production tipo_primitivo -> FLOAT 
-- On READ reduce production tipo_primitivo -> FLOAT 
-- On PTVIRG reduce production tipo_primitivo -> FLOAT 
-- On OULOG reduce production tipo_primitivo -> FLOAT 
-- On MULT reduce production tipo_primitivo -> FLOAT 
-- On MENOS reduce production tipo_primitivo -> FLOAT 
-- On MENORIGUAL reduce production tipo_primitivo -> FLOAT 
-- On MENOR reduce production tipo_primitivo -> FLOAT 
-- On MAIS reduce production tipo_primitivo -> FLOAT 
-- On MAIORIGUAL reduce production tipo_primitivo -> FLOAT 
-- On MAIOR reduce production tipo_primitivo -> FLOAT 
-- On LITSTRING reduce production tipo_primitivo -> FLOAT 
-- On LITCHAR reduce production tipo_primitivo -> FLOAT 
-- On INT reduce production tipo_primitivo -> FLOAT 
-- On IGUAL reduce production tipo_primitivo -> FLOAT 
-- On IF reduce production tipo_primitivo -> FLOAT 
-- On ID reduce production tipo_primitivo -> FLOAT 
-- On FPAR reduce production tipo_primitivo -> FLOAT 
-- On FOR reduce production tipo_primitivo -> FLOAT 
-- On FLOAT reduce production tipo_primitivo -> FLOAT 
-- On FESCOP reduce production tipo_primitivo -> FLOAT 
-- On FALSE reduce production tipo_primitivo -> FLOAT 
-- On ELOG reduce production tipo_primitivo -> FLOAT 
-- On DPTS reduce production tipo_primitivo -> FLOAT 
-- On DO reduce production tipo_primitivo -> FLOAT 
-- On DIV reduce production tipo_primitivo -> FLOAT 
-- On DIF reduce production tipo_primitivo -> FLOAT 
-- On CASE reduce production tipo_primitivo -> FLOAT 

State 34:
tipo_bool -> FALSE . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DPTS DO DIV DIF CASE ]
-- On WRITELN reduce production tipo_bool -> FALSE 
-- On WRITE reduce production tipo_bool -> FALSE 
-- On WHILE reduce production tipo_bool -> FALSE 
-- On VIRG reduce production tipo_bool -> FALSE 
-- On TRUE reduce production tipo_bool -> FALSE 
-- On TO reduce production tipo_bool -> FALSE 
-- On THEN reduce production tipo_bool -> FALSE 
-- On READLN reduce production tipo_bool -> FALSE 
-- On READ reduce production tipo_bool -> FALSE 
-- On PTVIRG reduce production tipo_bool -> FALSE 
-- On OULOG reduce production tipo_bool -> FALSE 
-- On MULT reduce production tipo_bool -> FALSE 
-- On MENOS reduce production tipo_bool -> FALSE 
-- On MENORIGUAL reduce production tipo_bool -> FALSE 
-- On MENOR reduce production tipo_bool -> FALSE 
-- On MAIS reduce production tipo_bool -> FALSE 
-- On MAIORIGUAL reduce production tipo_bool -> FALSE 
-- On MAIOR reduce production tipo_bool -> FALSE 
-- On LITSTRING reduce production tipo_bool -> FALSE 
-- On LITCHAR reduce production tipo_bool -> FALSE 
-- On INT reduce production tipo_bool -> FALSE 
-- On IGUAL reduce production tipo_bool -> FALSE 
-- On IF reduce production tipo_bool -> FALSE 
-- On ID reduce production tipo_bool -> FALSE 
-- On FPAR reduce production tipo_bool -> FALSE 
-- On FOR reduce production tipo_bool -> FALSE 
-- On FLOAT reduce production tipo_bool -> FALSE 
-- On FESCOP reduce production tipo_bool -> FALSE 
-- On FALSE reduce production tipo_bool -> FALSE 
-- On ELOG reduce production tipo_bool -> FALSE 
-- On DPTS reduce production tipo_bool -> FALSE 
-- On DO reduce production tipo_bool -> FALSE 
-- On DIV reduce production tipo_bool -> FALSE 
-- On DIF reduce production tipo_bool -> FALSE 
-- On CASE reduce production tipo_bool -> FALSE 

State 35:
entrada -> tipo_primitivo . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production entrada -> tipo_primitivo 
-- On WRITE reduce production entrada -> tipo_primitivo 
-- On WHILE reduce production entrada -> tipo_primitivo 
-- On VIRG reduce production entrada -> tipo_primitivo 
-- On TRUE reduce production entrada -> tipo_primitivo 
-- On TO reduce production entrada -> tipo_primitivo 
-- On THEN reduce production entrada -> tipo_primitivo 
-- On READLN reduce production entrada -> tipo_primitivo 
-- On READ reduce production entrada -> tipo_primitivo 
-- On PTVIRG reduce production entrada -> tipo_primitivo 
-- On OULOG reduce production entrada -> tipo_primitivo 
-- On MULT reduce production entrada -> tipo_primitivo 
-- On MENOS reduce production entrada -> tipo_primitivo 
-- On MENORIGUAL reduce production entrada -> tipo_primitivo 
-- On MENOR reduce production entrada -> tipo_primitivo 
-- On MAIS reduce production entrada -> tipo_primitivo 
-- On MAIORIGUAL reduce production entrada -> tipo_primitivo 
-- On MAIOR reduce production entrada -> tipo_primitivo 
-- On LITSTRING reduce production entrada -> tipo_primitivo 
-- On LITCHAR reduce production entrada -> tipo_primitivo 
-- On INT reduce production entrada -> tipo_primitivo 
-- On IGUAL reduce production entrada -> tipo_primitivo 
-- On IF reduce production entrada -> tipo_primitivo 
-- On ID reduce production entrada -> tipo_primitivo 
-- On FPAR reduce production entrada -> tipo_primitivo 
-- On FOR reduce production entrada -> tipo_primitivo 
-- On FLOAT reduce production entrada -> tipo_primitivo 
-- On FESCOP reduce production entrada -> tipo_primitivo 
-- On FALSE reduce production entrada -> tipo_primitivo 
-- On ELOG reduce production entrada -> tipo_primitivo 
-- On DO reduce production entrada -> tipo_primitivo 
-- On DIV reduce production entrada -> tipo_primitivo 
-- On DIF reduce production entrada -> tipo_primitivo 
-- On CASE reduce production entrada -> tipo_primitivo 

State 36:
tipo_primitivo -> tipo_bool . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DPTS DO DIV DIF CASE ]
-- On WRITELN reduce production tipo_primitivo -> tipo_bool 
-- On WRITE reduce production tipo_primitivo -> tipo_bool 
-- On WHILE reduce production tipo_primitivo -> tipo_bool 
-- On VIRG reduce production tipo_primitivo -> tipo_bool 
-- On TRUE reduce production tipo_primitivo -> tipo_bool 
-- On TO reduce production tipo_primitivo -> tipo_bool 
-- On THEN reduce production tipo_primitivo -> tipo_bool 
-- On READLN reduce production tipo_primitivo -> tipo_bool 
-- On READ reduce production tipo_primitivo -> tipo_bool 
-- On PTVIRG reduce production tipo_primitivo -> tipo_bool 
-- On OULOG reduce production tipo_primitivo -> tipo_bool 
-- On MULT reduce production tipo_primitivo -> tipo_bool 
-- On MENOS reduce production tipo_primitivo -> tipo_bool 
-- On MENORIGUAL reduce production tipo_primitivo -> tipo_bool 
-- On MENOR reduce production tipo_primitivo -> tipo_bool 
-- On MAIS reduce production tipo_primitivo -> tipo_bool 
-- On MAIORIGUAL reduce production tipo_primitivo -> tipo_bool 
-- On MAIOR reduce production tipo_primitivo -> tipo_bool 
-- On LITSTRING reduce production tipo_primitivo -> tipo_bool 
-- On LITCHAR reduce production tipo_primitivo -> tipo_bool 
-- On INT reduce production tipo_primitivo -> tipo_bool 
-- On IGUAL reduce production tipo_primitivo -> tipo_bool 
-- On IF reduce production tipo_primitivo -> tipo_bool 
-- On ID reduce production tipo_primitivo -> tipo_bool 
-- On FPAR reduce production tipo_primitivo -> tipo_bool 
-- On FOR reduce production tipo_primitivo -> tipo_bool 
-- On FLOAT reduce production tipo_primitivo -> tipo_bool 
-- On FESCOP reduce production tipo_primitivo -> tipo_bool 
-- On FALSE reduce production tipo_primitivo -> tipo_bool 
-- On ELOG reduce production tipo_primitivo -> tipo_bool 
-- On DPTS reduce production tipo_primitivo -> tipo_bool 
-- On DO reduce production tipo_primitivo -> tipo_bool 
-- On DIV reduce production tipo_primitivo -> tipo_bool 
-- On DIF reduce production tipo_primitivo -> tipo_bool 
-- On CASE reduce production tipo_primitivo -> tipo_bool 

State 37:
comando_saida -> WRITELN APAR separated_nonempty_list(VIRG,entrada) . FPAR [ PTVIRG ]
-- On FPAR shift to state 38

State 38:
comando_saida -> WRITELN APAR separated_nonempty_list(VIRG,entrada) FPAR . [ PTVIRG ]
-- On PTVIRG reduce production comando_saida -> WRITELN APAR separated_nonempty_list(VIRG,entrada) FPAR 

State 39:
separated_nonempty_list(VIRG,entrada) -> entrada . [ FPAR ]
separated_nonempty_list(VIRG,entrada) -> entrada . VIRG separated_nonempty_list(VIRG,entrada) [ FPAR ]
-- On VIRG shift to state 40
-- On FPAR reduce production separated_nonempty_list(VIRG,entrada) -> entrada 

State 40:
separated_nonempty_list(VIRG,entrada) -> entrada VIRG . separated_nonempty_list(VIRG,entrada) [ FPAR ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 32
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On separated_nonempty_list(VIRG,entrada) shift to state 41
-- On entrada shift to state 39

State 41:
separated_nonempty_list(VIRG,entrada) -> entrada VIRG separated_nonempty_list(VIRG,entrada) . [ FPAR ]
-- On FPAR reduce production separated_nonempty_list(VIRG,entrada) -> entrada VIRG separated_nonempty_list(VIRG,entrada) 

State 42:
comando_saida -> WRITE . APAR separated_nonempty_list(VIRG,entrada) FPAR [ PTVIRG ]
-- On APAR shift to state 43

State 43:
comando_saida -> WRITE APAR . separated_nonempty_list(VIRG,entrada) FPAR [ PTVIRG ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 32
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On separated_nonempty_list(VIRG,entrada) shift to state 44
-- On entrada shift to state 39

State 44:
comando_saida -> WRITE APAR separated_nonempty_list(VIRG,entrada) . FPAR [ PTVIRG ]
-- On FPAR shift to state 45

State 45:
comando_saida -> WRITE APAR separated_nonempty_list(VIRG,entrada) FPAR . [ PTVIRG ]
-- On PTVIRG reduce production comando_saida -> WRITE APAR separated_nonempty_list(VIRG,entrada) FPAR 

State 46:
comando_while -> WHILE . expressao DO AESCOP nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 32
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On expressao shift to state 94
-- On entrada shift to state 57

State 47:
expressao -> APAR . expressao FPAR [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 32
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On expressao shift to state 48
-- On entrada shift to state 57

State 48:
expressao -> expressao . MAIS expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENOS expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . IGUAL expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . DIV expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MAIOR expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENOR expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MULT expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENORIGUAL expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MAIORIGUAL expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . DIF expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . OULOG expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . ELOG expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> APAR expressao . FPAR [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENOS funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . IGUAL funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . DIV funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MAIOR funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENOR funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MULT funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENORIGUAL funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MAIORIGUAL funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . DIF funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . OULOG funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . ELOG funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
-- On OULOG shift to state 49
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MENORIGUAL shift to state 67
-- On MENOR shift to state 73
-- On MAIS shift to state 70
-- On MAIORIGUAL shift to state 76
-- On MAIOR shift to state 79
-- On IGUAL shift to state 82
-- On FPAR shift to state 93
-- On ELOG shift to state 85
-- On DIV shift to state 64
-- On DIF shift to state 88

State 49:
expressao -> expressao OULOG . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao OULOG . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 91
-- On expressao shift to state 92
-- On entrada shift to state 57

State 50:
entrada -> ID . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
funcao -> ID . APAR separated_nonempty_list(VIRG,expressao) FPAR [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On APAR shift to state 51
-- On WRITELN reduce production entrada -> ID 
-- On WRITE reduce production entrada -> ID 
-- On WHILE reduce production entrada -> ID 
-- On VIRG reduce production entrada -> ID 
-- On TRUE reduce production entrada -> ID 
-- On TO reduce production entrada -> ID 
-- On THEN reduce production entrada -> ID 
-- On READLN reduce production entrada -> ID 
-- On READ reduce production entrada -> ID 
-- On PTVIRG reduce production entrada -> ID 
-- On OULOG reduce production entrada -> ID 
-- On MULT reduce production entrada -> ID 
-- On MENOS reduce production entrada -> ID 
-- On MENORIGUAL reduce production entrada -> ID 
-- On MENOR reduce production entrada -> ID 
-- On MAIS reduce production entrada -> ID 
-- On MAIORIGUAL reduce production entrada -> ID 
-- On MAIOR reduce production entrada -> ID 
-- On LITSTRING reduce production entrada -> ID 
-- On LITCHAR reduce production entrada -> ID 
-- On INT reduce production entrada -> ID 
-- On IGUAL reduce production entrada -> ID 
-- On IF reduce production entrada -> ID 
-- On ID reduce production entrada -> ID 
-- On FPAR reduce production entrada -> ID 
-- On FOR reduce production entrada -> ID 
-- On FLOAT reduce production entrada -> ID 
-- On FESCOP reduce production entrada -> ID 
-- On FALSE reduce production entrada -> ID 
-- On ELOG reduce production entrada -> ID 
-- On DO reduce production entrada -> ID 
-- On DIV reduce production entrada -> ID 
-- On DIF reduce production entrada -> ID 
-- On CASE reduce production entrada -> ID 

State 51:
funcao -> ID APAR . separated_nonempty_list(VIRG,expressao) FPAR [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 32
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On separated_nonempty_list(VIRG,expressao) shift to state 52
-- On expressao shift to state 54
-- On entrada shift to state 57

State 52:
funcao -> ID APAR separated_nonempty_list(VIRG,expressao) . FPAR [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On FPAR shift to state 53

State 53:
funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On WRITE reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On WHILE reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On VIRG reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On TRUE reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On TO reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On THEN reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On READLN reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On READ reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On PTVIRG reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On OULOG reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On MULT reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On MENOS reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On MENORIGUAL reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On MENOR reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On MAIS reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On MAIORIGUAL reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On MAIOR reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On LITSTRING reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On LITCHAR reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On INT reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On IGUAL reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On IF reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ID reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FPAR reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FOR reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FLOAT reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FESCOP reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FALSE reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ELOG reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On DO reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On DIV reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On DIF reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On CASE reduce production funcao -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 

State 54:
expressao -> expressao . MAIS expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENOS expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . IGUAL expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . DIV expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MAIOR expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENOR expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MULT expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENORIGUAL expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MAIORIGUAL expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . DIF expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . OULOG expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . ELOG expressao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MAIS funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENOS funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . IGUAL funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . DIV funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MAIOR funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENOR funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MULT funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MENORIGUAL funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . MAIORIGUAL funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . DIF funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . OULOG funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
expressao -> expressao . ELOG funcao [ VIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIF ]
separated_nonempty_list(VIRG,expressao) -> expressao . [ FPAR ]
separated_nonempty_list(VIRG,expressao) -> expressao . VIRG separated_nonempty_list(VIRG,expressao) [ FPAR ]
-- On VIRG shift to state 55
-- On OULOG shift to state 49
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MENORIGUAL shift to state 67
-- On MENOR shift to state 73
-- On MAIS shift to state 70
-- On MAIORIGUAL shift to state 76
-- On MAIOR shift to state 79
-- On IGUAL shift to state 82
-- On ELOG shift to state 85
-- On DIV shift to state 64
-- On DIF shift to state 88
-- On FPAR reduce production separated_nonempty_list(VIRG,expressao) -> expressao 

State 55:
separated_nonempty_list(VIRG,expressao) -> expressao VIRG . separated_nonempty_list(VIRG,expressao) [ FPAR ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 32
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On separated_nonempty_list(VIRG,expressao) shift to state 56
-- On expressao shift to state 54
-- On entrada shift to state 57

State 56:
separated_nonempty_list(VIRG,expressao) -> expressao VIRG separated_nonempty_list(VIRG,expressao) . [ FPAR ]
-- On FPAR reduce production separated_nonempty_list(VIRG,expressao) -> expressao VIRG separated_nonempty_list(VIRG,expressao) 

State 57:
expressao -> entrada . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> entrada 
-- On WRITE reduce production expressao -> entrada 
-- On WHILE reduce production expressao -> entrada 
-- On VIRG reduce production expressao -> entrada 
-- On TRUE reduce production expressao -> entrada 
-- On TO reduce production expressao -> entrada 
-- On THEN reduce production expressao -> entrada 
-- On READLN reduce production expressao -> entrada 
-- On READ reduce production expressao -> entrada 
-- On PTVIRG reduce production expressao -> entrada 
-- On OULOG reduce production expressao -> entrada 
-- On MULT reduce production expressao -> entrada 
-- On MENOS reduce production expressao -> entrada 
-- On MENORIGUAL reduce production expressao -> entrada 
-- On MENOR reduce production expressao -> entrada 
-- On MAIS reduce production expressao -> entrada 
-- On MAIORIGUAL reduce production expressao -> entrada 
-- On MAIOR reduce production expressao -> entrada 
-- On LITSTRING reduce production expressao -> entrada 
-- On LITCHAR reduce production expressao -> entrada 
-- On INT reduce production expressao -> entrada 
-- On IGUAL reduce production expressao -> entrada 
-- On IF reduce production expressao -> entrada 
-- On ID reduce production expressao -> entrada 
-- On FPAR reduce production expressao -> entrada 
-- On FOR reduce production expressao -> entrada 
-- On FLOAT reduce production expressao -> entrada 
-- On FESCOP reduce production expressao -> entrada 
-- On FALSE reduce production expressao -> entrada 
-- On ELOG reduce production expressao -> entrada 
-- On DO reduce production expressao -> entrada 
-- On DIV reduce production expressao -> entrada 
-- On DIF reduce production expressao -> entrada 
-- On CASE reduce production expressao -> entrada 

State 58:
expressao -> expressao MULT . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MULT . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 59
-- On expressao shift to state 60
-- On entrada shift to state 57

State 59:
expressao -> expressao MULT funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao MULT funcao 
-- On WRITE reduce production expressao -> expressao MULT funcao 
-- On WHILE reduce production expressao -> expressao MULT funcao 
-- On VIRG reduce production expressao -> expressao MULT funcao 
-- On TRUE reduce production expressao -> expressao MULT funcao 
-- On TO reduce production expressao -> expressao MULT funcao 
-- On THEN reduce production expressao -> expressao MULT funcao 
-- On READLN reduce production expressao -> expressao MULT funcao 
-- On READ reduce production expressao -> expressao MULT funcao 
-- On PTVIRG reduce production expressao -> expressao MULT funcao 
-- On OULOG reduce production expressao -> expressao MULT funcao 
-- On MULT reduce production expressao -> expressao MULT funcao 
-- On MENOS reduce production expressao -> expressao MULT funcao 
-- On MENORIGUAL reduce production expressao -> expressao MULT funcao 
-- On MENOR reduce production expressao -> expressao MULT funcao 
-- On MAIS reduce production expressao -> expressao MULT funcao 
-- On MAIORIGUAL reduce production expressao -> expressao MULT funcao 
-- On MAIOR reduce production expressao -> expressao MULT funcao 
-- On LITSTRING reduce production expressao -> expressao MULT funcao 
-- On LITCHAR reduce production expressao -> expressao MULT funcao 
-- On INT reduce production expressao -> expressao MULT funcao 
-- On IGUAL reduce production expressao -> expressao MULT funcao 
-- On IF reduce production expressao -> expressao MULT funcao 
-- On ID reduce production expressao -> expressao MULT funcao 
-- On FPAR reduce production expressao -> expressao MULT funcao 
-- On FOR reduce production expressao -> expressao MULT funcao 
-- On FLOAT reduce production expressao -> expressao MULT funcao 
-- On FESCOP reduce production expressao -> expressao MULT funcao 
-- On FALSE reduce production expressao -> expressao MULT funcao 
-- On ELOG reduce production expressao -> expressao MULT funcao 
-- On DO reduce production expressao -> expressao MULT funcao 
-- On DIV reduce production expressao -> expressao MULT funcao 
-- On DIF reduce production expressao -> expressao MULT funcao 
-- On CASE reduce production expressao -> expressao MULT funcao 

State 60:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MULT expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao MULT expressao 
-- On WRITE reduce production expressao -> expressao MULT expressao 
-- On WHILE reduce production expressao -> expressao MULT expressao 
-- On VIRG reduce production expressao -> expressao MULT expressao 
-- On TRUE reduce production expressao -> expressao MULT expressao 
-- On TO reduce production expressao -> expressao MULT expressao 
-- On THEN reduce production expressao -> expressao MULT expressao 
-- On READLN reduce production expressao -> expressao MULT expressao 
-- On READ reduce production expressao -> expressao MULT expressao 
-- On PTVIRG reduce production expressao -> expressao MULT expressao 
-- On OULOG reduce production expressao -> expressao MULT expressao 
-- On MULT reduce production expressao -> expressao MULT expressao 
-- On MENOS reduce production expressao -> expressao MULT expressao 
-- On MENORIGUAL reduce production expressao -> expressao MULT expressao 
-- On MENOR reduce production expressao -> expressao MULT expressao 
-- On MAIS reduce production expressao -> expressao MULT expressao 
-- On MAIORIGUAL reduce production expressao -> expressao MULT expressao 
-- On MAIOR reduce production expressao -> expressao MULT expressao 
-- On LITSTRING reduce production expressao -> expressao MULT expressao 
-- On LITCHAR reduce production expressao -> expressao MULT expressao 
-- On INT reduce production expressao -> expressao MULT expressao 
-- On IGUAL reduce production expressao -> expressao MULT expressao 
-- On IF reduce production expressao -> expressao MULT expressao 
-- On ID reduce production expressao -> expressao MULT expressao 
-- On FPAR reduce production expressao -> expressao MULT expressao 
-- On FOR reduce production expressao -> expressao MULT expressao 
-- On FLOAT reduce production expressao -> expressao MULT expressao 
-- On FESCOP reduce production expressao -> expressao MULT expressao 
-- On FALSE reduce production expressao -> expressao MULT expressao 
-- On ELOG reduce production expressao -> expressao MULT expressao 
-- On DO reduce production expressao -> expressao MULT expressao 
-- On DIV reduce production expressao -> expressao MULT expressao 
-- On DIF reduce production expressao -> expressao MULT expressao 
-- On CASE reduce production expressao -> expressao MULT expressao 

State 61:
expressao -> expressao MENOS . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MENOS . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 62
-- On expressao shift to state 63
-- On entrada shift to state 57

State 62:
expressao -> expressao MENOS funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao MENOS funcao 
-- On WRITE reduce production expressao -> expressao MENOS funcao 
-- On WHILE reduce production expressao -> expressao MENOS funcao 
-- On VIRG reduce production expressao -> expressao MENOS funcao 
-- On TRUE reduce production expressao -> expressao MENOS funcao 
-- On TO reduce production expressao -> expressao MENOS funcao 
-- On THEN reduce production expressao -> expressao MENOS funcao 
-- On READLN reduce production expressao -> expressao MENOS funcao 
-- On READ reduce production expressao -> expressao MENOS funcao 
-- On PTVIRG reduce production expressao -> expressao MENOS funcao 
-- On OULOG reduce production expressao -> expressao MENOS funcao 
-- On MULT reduce production expressao -> expressao MENOS funcao 
-- On MENOS reduce production expressao -> expressao MENOS funcao 
-- On MENORIGUAL reduce production expressao -> expressao MENOS funcao 
-- On MENOR reduce production expressao -> expressao MENOS funcao 
-- On MAIS reduce production expressao -> expressao MENOS funcao 
-- On MAIORIGUAL reduce production expressao -> expressao MENOS funcao 
-- On MAIOR reduce production expressao -> expressao MENOS funcao 
-- On LITSTRING reduce production expressao -> expressao MENOS funcao 
-- On LITCHAR reduce production expressao -> expressao MENOS funcao 
-- On INT reduce production expressao -> expressao MENOS funcao 
-- On IGUAL reduce production expressao -> expressao MENOS funcao 
-- On IF reduce production expressao -> expressao MENOS funcao 
-- On ID reduce production expressao -> expressao MENOS funcao 
-- On FPAR reduce production expressao -> expressao MENOS funcao 
-- On FOR reduce production expressao -> expressao MENOS funcao 
-- On FLOAT reduce production expressao -> expressao MENOS funcao 
-- On FESCOP reduce production expressao -> expressao MENOS funcao 
-- On FALSE reduce production expressao -> expressao MENOS funcao 
-- On ELOG reduce production expressao -> expressao MENOS funcao 
-- On DO reduce production expressao -> expressao MENOS funcao 
-- On DIV reduce production expressao -> expressao MENOS funcao 
-- On DIF reduce production expressao -> expressao MENOS funcao 
-- On CASE reduce production expressao -> expressao MENOS funcao 

State 63:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MENOS expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On MULT shift to state 58
-- On DIV shift to state 64
-- On WRITELN reduce production expressao -> expressao MENOS expressao 
-- On WRITE reduce production expressao -> expressao MENOS expressao 
-- On WHILE reduce production expressao -> expressao MENOS expressao 
-- On VIRG reduce production expressao -> expressao MENOS expressao 
-- On TRUE reduce production expressao -> expressao MENOS expressao 
-- On TO reduce production expressao -> expressao MENOS expressao 
-- On THEN reduce production expressao -> expressao MENOS expressao 
-- On READLN reduce production expressao -> expressao MENOS expressao 
-- On READ reduce production expressao -> expressao MENOS expressao 
-- On PTVIRG reduce production expressao -> expressao MENOS expressao 
-- On OULOG reduce production expressao -> expressao MENOS expressao 
-- On MENOS reduce production expressao -> expressao MENOS expressao 
-- On MENORIGUAL reduce production expressao -> expressao MENOS expressao 
-- On MENOR reduce production expressao -> expressao MENOS expressao 
-- On MAIS reduce production expressao -> expressao MENOS expressao 
-- On MAIORIGUAL reduce production expressao -> expressao MENOS expressao 
-- On MAIOR reduce production expressao -> expressao MENOS expressao 
-- On LITSTRING reduce production expressao -> expressao MENOS expressao 
-- On LITCHAR reduce production expressao -> expressao MENOS expressao 
-- On INT reduce production expressao -> expressao MENOS expressao 
-- On IGUAL reduce production expressao -> expressao MENOS expressao 
-- On IF reduce production expressao -> expressao MENOS expressao 
-- On ID reduce production expressao -> expressao MENOS expressao 
-- On FPAR reduce production expressao -> expressao MENOS expressao 
-- On FOR reduce production expressao -> expressao MENOS expressao 
-- On FLOAT reduce production expressao -> expressao MENOS expressao 
-- On FESCOP reduce production expressao -> expressao MENOS expressao 
-- On FALSE reduce production expressao -> expressao MENOS expressao 
-- On ELOG reduce production expressao -> expressao MENOS expressao 
-- On DO reduce production expressao -> expressao MENOS expressao 
-- On DIF reduce production expressao -> expressao MENOS expressao 
-- On CASE reduce production expressao -> expressao MENOS expressao 

State 64:
expressao -> expressao DIV . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao DIV . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 65
-- On expressao shift to state 66
-- On entrada shift to state 57

State 65:
expressao -> expressao DIV funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao DIV funcao 
-- On WRITE reduce production expressao -> expressao DIV funcao 
-- On WHILE reduce production expressao -> expressao DIV funcao 
-- On VIRG reduce production expressao -> expressao DIV funcao 
-- On TRUE reduce production expressao -> expressao DIV funcao 
-- On TO reduce production expressao -> expressao DIV funcao 
-- On THEN reduce production expressao -> expressao DIV funcao 
-- On READLN reduce production expressao -> expressao DIV funcao 
-- On READ reduce production expressao -> expressao DIV funcao 
-- On PTVIRG reduce production expressao -> expressao DIV funcao 
-- On OULOG reduce production expressao -> expressao DIV funcao 
-- On MULT reduce production expressao -> expressao DIV funcao 
-- On MENOS reduce production expressao -> expressao DIV funcao 
-- On MENORIGUAL reduce production expressao -> expressao DIV funcao 
-- On MENOR reduce production expressao -> expressao DIV funcao 
-- On MAIS reduce production expressao -> expressao DIV funcao 
-- On MAIORIGUAL reduce production expressao -> expressao DIV funcao 
-- On MAIOR reduce production expressao -> expressao DIV funcao 
-- On LITSTRING reduce production expressao -> expressao DIV funcao 
-- On LITCHAR reduce production expressao -> expressao DIV funcao 
-- On INT reduce production expressao -> expressao DIV funcao 
-- On IGUAL reduce production expressao -> expressao DIV funcao 
-- On IF reduce production expressao -> expressao DIV funcao 
-- On ID reduce production expressao -> expressao DIV funcao 
-- On FPAR reduce production expressao -> expressao DIV funcao 
-- On FOR reduce production expressao -> expressao DIV funcao 
-- On FLOAT reduce production expressao -> expressao DIV funcao 
-- On FESCOP reduce production expressao -> expressao DIV funcao 
-- On FALSE reduce production expressao -> expressao DIV funcao 
-- On ELOG reduce production expressao -> expressao DIV funcao 
-- On DO reduce production expressao -> expressao DIV funcao 
-- On DIV reduce production expressao -> expressao DIV funcao 
-- On DIF reduce production expressao -> expressao DIV funcao 
-- On CASE reduce production expressao -> expressao DIV funcao 

State 66:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao DIV expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao DIV expressao 
-- On WRITE reduce production expressao -> expressao DIV expressao 
-- On WHILE reduce production expressao -> expressao DIV expressao 
-- On VIRG reduce production expressao -> expressao DIV expressao 
-- On TRUE reduce production expressao -> expressao DIV expressao 
-- On TO reduce production expressao -> expressao DIV expressao 
-- On THEN reduce production expressao -> expressao DIV expressao 
-- On READLN reduce production expressao -> expressao DIV expressao 
-- On READ reduce production expressao -> expressao DIV expressao 
-- On PTVIRG reduce production expressao -> expressao DIV expressao 
-- On OULOG reduce production expressao -> expressao DIV expressao 
-- On MULT reduce production expressao -> expressao DIV expressao 
-- On MENOS reduce production expressao -> expressao DIV expressao 
-- On MENORIGUAL reduce production expressao -> expressao DIV expressao 
-- On MENOR reduce production expressao -> expressao DIV expressao 
-- On MAIS reduce production expressao -> expressao DIV expressao 
-- On MAIORIGUAL reduce production expressao -> expressao DIV expressao 
-- On MAIOR reduce production expressao -> expressao DIV expressao 
-- On LITSTRING reduce production expressao -> expressao DIV expressao 
-- On LITCHAR reduce production expressao -> expressao DIV expressao 
-- On INT reduce production expressao -> expressao DIV expressao 
-- On IGUAL reduce production expressao -> expressao DIV expressao 
-- On IF reduce production expressao -> expressao DIV expressao 
-- On ID reduce production expressao -> expressao DIV expressao 
-- On FPAR reduce production expressao -> expressao DIV expressao 
-- On FOR reduce production expressao -> expressao DIV expressao 
-- On FLOAT reduce production expressao -> expressao DIV expressao 
-- On FESCOP reduce production expressao -> expressao DIV expressao 
-- On FALSE reduce production expressao -> expressao DIV expressao 
-- On ELOG reduce production expressao -> expressao DIV expressao 
-- On DO reduce production expressao -> expressao DIV expressao 
-- On DIV reduce production expressao -> expressao DIV expressao 
-- On DIF reduce production expressao -> expressao DIV expressao 
-- On CASE reduce production expressao -> expressao DIV expressao 

State 67:
expressao -> expressao MENORIGUAL . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MENORIGUAL . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 68
-- On expressao shift to state 69
-- On entrada shift to state 57

State 68:
expressao -> expressao MENORIGUAL funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao MENORIGUAL funcao 
-- On WRITE reduce production expressao -> expressao MENORIGUAL funcao 
-- On WHILE reduce production expressao -> expressao MENORIGUAL funcao 
-- On VIRG reduce production expressao -> expressao MENORIGUAL funcao 
-- On TRUE reduce production expressao -> expressao MENORIGUAL funcao 
-- On TO reduce production expressao -> expressao MENORIGUAL funcao 
-- On THEN reduce production expressao -> expressao MENORIGUAL funcao 
-- On READLN reduce production expressao -> expressao MENORIGUAL funcao 
-- On READ reduce production expressao -> expressao MENORIGUAL funcao 
-- On PTVIRG reduce production expressao -> expressao MENORIGUAL funcao 
-- On OULOG reduce production expressao -> expressao MENORIGUAL funcao 
-- On MULT reduce production expressao -> expressao MENORIGUAL funcao 
-- On MENOS reduce production expressao -> expressao MENORIGUAL funcao 
-- On MENORIGUAL reduce production expressao -> expressao MENORIGUAL funcao 
-- On MENOR reduce production expressao -> expressao MENORIGUAL funcao 
-- On MAIS reduce production expressao -> expressao MENORIGUAL funcao 
-- On MAIORIGUAL reduce production expressao -> expressao MENORIGUAL funcao 
-- On MAIOR reduce production expressao -> expressao MENORIGUAL funcao 
-- On LITSTRING reduce production expressao -> expressao MENORIGUAL funcao 
-- On LITCHAR reduce production expressao -> expressao MENORIGUAL funcao 
-- On INT reduce production expressao -> expressao MENORIGUAL funcao 
-- On IGUAL reduce production expressao -> expressao MENORIGUAL funcao 
-- On IF reduce production expressao -> expressao MENORIGUAL funcao 
-- On ID reduce production expressao -> expressao MENORIGUAL funcao 
-- On FPAR reduce production expressao -> expressao MENORIGUAL funcao 
-- On FOR reduce production expressao -> expressao MENORIGUAL funcao 
-- On FLOAT reduce production expressao -> expressao MENORIGUAL funcao 
-- On FESCOP reduce production expressao -> expressao MENORIGUAL funcao 
-- On FALSE reduce production expressao -> expressao MENORIGUAL funcao 
-- On ELOG reduce production expressao -> expressao MENORIGUAL funcao 
-- On DO reduce production expressao -> expressao MENORIGUAL funcao 
-- On DIV reduce production expressao -> expressao MENORIGUAL funcao 
-- On DIF reduce production expressao -> expressao MENORIGUAL funcao 
-- On CASE reduce production expressao -> expressao MENORIGUAL funcao 

State 69:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MENORIGUAL expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MAIS shift to state 70
-- On DIV shift to state 64
-- On WRITELN reduce production expressao -> expressao MENORIGUAL expressao 
-- On WRITE reduce production expressao -> expressao MENORIGUAL expressao 
-- On WHILE reduce production expressao -> expressao MENORIGUAL expressao 
-- On VIRG reduce production expressao -> expressao MENORIGUAL expressao 
-- On TRUE reduce production expressao -> expressao MENORIGUAL expressao 
-- On TO reduce production expressao -> expressao MENORIGUAL expressao 
-- On THEN reduce production expressao -> expressao MENORIGUAL expressao 
-- On READLN reduce production expressao -> expressao MENORIGUAL expressao 
-- On READ reduce production expressao -> expressao MENORIGUAL expressao 
-- On PTVIRG reduce production expressao -> expressao MENORIGUAL expressao 
-- On OULOG reduce production expressao -> expressao MENORIGUAL expressao 
-- On MENORIGUAL reduce production expressao -> expressao MENORIGUAL expressao 
-- On MENOR reduce production expressao -> expressao MENORIGUAL expressao 
-- On MAIORIGUAL reduce production expressao -> expressao MENORIGUAL expressao 
-- On MAIOR reduce production expressao -> expressao MENORIGUAL expressao 
-- On LITSTRING reduce production expressao -> expressao MENORIGUAL expressao 
-- On LITCHAR reduce production expressao -> expressao MENORIGUAL expressao 
-- On INT reduce production expressao -> expressao MENORIGUAL expressao 
-- On IGUAL reduce production expressao -> expressao MENORIGUAL expressao 
-- On IF reduce production expressao -> expressao MENORIGUAL expressao 
-- On ID reduce production expressao -> expressao MENORIGUAL expressao 
-- On FPAR reduce production expressao -> expressao MENORIGUAL expressao 
-- On FOR reduce production expressao -> expressao MENORIGUAL expressao 
-- On FLOAT reduce production expressao -> expressao MENORIGUAL expressao 
-- On FESCOP reduce production expressao -> expressao MENORIGUAL expressao 
-- On FALSE reduce production expressao -> expressao MENORIGUAL expressao 
-- On ELOG reduce production expressao -> expressao MENORIGUAL expressao 
-- On DO reduce production expressao -> expressao MENORIGUAL expressao 
-- On DIF reduce production expressao -> expressao MENORIGUAL expressao 
-- On CASE reduce production expressao -> expressao MENORIGUAL expressao 

State 70:
expressao -> expressao MAIS . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MAIS . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 71
-- On expressao shift to state 72
-- On entrada shift to state 57

State 71:
expressao -> expressao MAIS funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao MAIS funcao 
-- On WRITE reduce production expressao -> expressao MAIS funcao 
-- On WHILE reduce production expressao -> expressao MAIS funcao 
-- On VIRG reduce production expressao -> expressao MAIS funcao 
-- On TRUE reduce production expressao -> expressao MAIS funcao 
-- On TO reduce production expressao -> expressao MAIS funcao 
-- On THEN reduce production expressao -> expressao MAIS funcao 
-- On READLN reduce production expressao -> expressao MAIS funcao 
-- On READ reduce production expressao -> expressao MAIS funcao 
-- On PTVIRG reduce production expressao -> expressao MAIS funcao 
-- On OULOG reduce production expressao -> expressao MAIS funcao 
-- On MULT reduce production expressao -> expressao MAIS funcao 
-- On MENOS reduce production expressao -> expressao MAIS funcao 
-- On MENORIGUAL reduce production expressao -> expressao MAIS funcao 
-- On MENOR reduce production expressao -> expressao MAIS funcao 
-- On MAIS reduce production expressao -> expressao MAIS funcao 
-- On MAIORIGUAL reduce production expressao -> expressao MAIS funcao 
-- On MAIOR reduce production expressao -> expressao MAIS funcao 
-- On LITSTRING reduce production expressao -> expressao MAIS funcao 
-- On LITCHAR reduce production expressao -> expressao MAIS funcao 
-- On INT reduce production expressao -> expressao MAIS funcao 
-- On IGUAL reduce production expressao -> expressao MAIS funcao 
-- On IF reduce production expressao -> expressao MAIS funcao 
-- On ID reduce production expressao -> expressao MAIS funcao 
-- On FPAR reduce production expressao -> expressao MAIS funcao 
-- On FOR reduce production expressao -> expressao MAIS funcao 
-- On FLOAT reduce production expressao -> expressao MAIS funcao 
-- On FESCOP reduce production expressao -> expressao MAIS funcao 
-- On FALSE reduce production expressao -> expressao MAIS funcao 
-- On ELOG reduce production expressao -> expressao MAIS funcao 
-- On DO reduce production expressao -> expressao MAIS funcao 
-- On DIV reduce production expressao -> expressao MAIS funcao 
-- On DIF reduce production expressao -> expressao MAIS funcao 
-- On CASE reduce production expressao -> expressao MAIS funcao 

State 72:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MAIS expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On MULT shift to state 58
-- On DIV shift to state 64
-- On WRITELN reduce production expressao -> expressao MAIS expressao 
-- On WRITE reduce production expressao -> expressao MAIS expressao 
-- On WHILE reduce production expressao -> expressao MAIS expressao 
-- On VIRG reduce production expressao -> expressao MAIS expressao 
-- On TRUE reduce production expressao -> expressao MAIS expressao 
-- On TO reduce production expressao -> expressao MAIS expressao 
-- On THEN reduce production expressao -> expressao MAIS expressao 
-- On READLN reduce production expressao -> expressao MAIS expressao 
-- On READ reduce production expressao -> expressao MAIS expressao 
-- On PTVIRG reduce production expressao -> expressao MAIS expressao 
-- On OULOG reduce production expressao -> expressao MAIS expressao 
-- On MENOS reduce production expressao -> expressao MAIS expressao 
-- On MENORIGUAL reduce production expressao -> expressao MAIS expressao 
-- On MENOR reduce production expressao -> expressao MAIS expressao 
-- On MAIS reduce production expressao -> expressao MAIS expressao 
-- On MAIORIGUAL reduce production expressao -> expressao MAIS expressao 
-- On MAIOR reduce production expressao -> expressao MAIS expressao 
-- On LITSTRING reduce production expressao -> expressao MAIS expressao 
-- On LITCHAR reduce production expressao -> expressao MAIS expressao 
-- On INT reduce production expressao -> expressao MAIS expressao 
-- On IGUAL reduce production expressao -> expressao MAIS expressao 
-- On IF reduce production expressao -> expressao MAIS expressao 
-- On ID reduce production expressao -> expressao MAIS expressao 
-- On FPAR reduce production expressao -> expressao MAIS expressao 
-- On FOR reduce production expressao -> expressao MAIS expressao 
-- On FLOAT reduce production expressao -> expressao MAIS expressao 
-- On FESCOP reduce production expressao -> expressao MAIS expressao 
-- On FALSE reduce production expressao -> expressao MAIS expressao 
-- On ELOG reduce production expressao -> expressao MAIS expressao 
-- On DO reduce production expressao -> expressao MAIS expressao 
-- On DIF reduce production expressao -> expressao MAIS expressao 
-- On CASE reduce production expressao -> expressao MAIS expressao 

State 73:
expressao -> expressao MENOR . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MENOR . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 74
-- On expressao shift to state 75
-- On entrada shift to state 57

State 74:
expressao -> expressao MENOR funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao MENOR funcao 
-- On WRITE reduce production expressao -> expressao MENOR funcao 
-- On WHILE reduce production expressao -> expressao MENOR funcao 
-- On VIRG reduce production expressao -> expressao MENOR funcao 
-- On TRUE reduce production expressao -> expressao MENOR funcao 
-- On TO reduce production expressao -> expressao MENOR funcao 
-- On THEN reduce production expressao -> expressao MENOR funcao 
-- On READLN reduce production expressao -> expressao MENOR funcao 
-- On READ reduce production expressao -> expressao MENOR funcao 
-- On PTVIRG reduce production expressao -> expressao MENOR funcao 
-- On OULOG reduce production expressao -> expressao MENOR funcao 
-- On MULT reduce production expressao -> expressao MENOR funcao 
-- On MENOS reduce production expressao -> expressao MENOR funcao 
-- On MENORIGUAL reduce production expressao -> expressao MENOR funcao 
-- On MENOR reduce production expressao -> expressao MENOR funcao 
-- On MAIS reduce production expressao -> expressao MENOR funcao 
-- On MAIORIGUAL reduce production expressao -> expressao MENOR funcao 
-- On MAIOR reduce production expressao -> expressao MENOR funcao 
-- On LITSTRING reduce production expressao -> expressao MENOR funcao 
-- On LITCHAR reduce production expressao -> expressao MENOR funcao 
-- On INT reduce production expressao -> expressao MENOR funcao 
-- On IGUAL reduce production expressao -> expressao MENOR funcao 
-- On IF reduce production expressao -> expressao MENOR funcao 
-- On ID reduce production expressao -> expressao MENOR funcao 
-- On FPAR reduce production expressao -> expressao MENOR funcao 
-- On FOR reduce production expressao -> expressao MENOR funcao 
-- On FLOAT reduce production expressao -> expressao MENOR funcao 
-- On FESCOP reduce production expressao -> expressao MENOR funcao 
-- On FALSE reduce production expressao -> expressao MENOR funcao 
-- On ELOG reduce production expressao -> expressao MENOR funcao 
-- On DO reduce production expressao -> expressao MENOR funcao 
-- On DIV reduce production expressao -> expressao MENOR funcao 
-- On DIF reduce production expressao -> expressao MENOR funcao 
-- On CASE reduce production expressao -> expressao MENOR funcao 

State 75:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MENOR expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MAIS shift to state 70
-- On DIV shift to state 64
-- On WRITELN reduce production expressao -> expressao MENOR expressao 
-- On WRITE reduce production expressao -> expressao MENOR expressao 
-- On WHILE reduce production expressao -> expressao MENOR expressao 
-- On VIRG reduce production expressao -> expressao MENOR expressao 
-- On TRUE reduce production expressao -> expressao MENOR expressao 
-- On TO reduce production expressao -> expressao MENOR expressao 
-- On THEN reduce production expressao -> expressao MENOR expressao 
-- On READLN reduce production expressao -> expressao MENOR expressao 
-- On READ reduce production expressao -> expressao MENOR expressao 
-- On PTVIRG reduce production expressao -> expressao MENOR expressao 
-- On OULOG reduce production expressao -> expressao MENOR expressao 
-- On MENORIGUAL reduce production expressao -> expressao MENOR expressao 
-- On MENOR reduce production expressao -> expressao MENOR expressao 
-- On MAIORIGUAL reduce production expressao -> expressao MENOR expressao 
-- On MAIOR reduce production expressao -> expressao MENOR expressao 
-- On LITSTRING reduce production expressao -> expressao MENOR expressao 
-- On LITCHAR reduce production expressao -> expressao MENOR expressao 
-- On INT reduce production expressao -> expressao MENOR expressao 
-- On IGUAL reduce production expressao -> expressao MENOR expressao 
-- On IF reduce production expressao -> expressao MENOR expressao 
-- On ID reduce production expressao -> expressao MENOR expressao 
-- On FPAR reduce production expressao -> expressao MENOR expressao 
-- On FOR reduce production expressao -> expressao MENOR expressao 
-- On FLOAT reduce production expressao -> expressao MENOR expressao 
-- On FESCOP reduce production expressao -> expressao MENOR expressao 
-- On FALSE reduce production expressao -> expressao MENOR expressao 
-- On ELOG reduce production expressao -> expressao MENOR expressao 
-- On DO reduce production expressao -> expressao MENOR expressao 
-- On DIF reduce production expressao -> expressao MENOR expressao 
-- On CASE reduce production expressao -> expressao MENOR expressao 

State 76:
expressao -> expressao MAIORIGUAL . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MAIORIGUAL . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 77
-- On expressao shift to state 78
-- On entrada shift to state 57

State 77:
expressao -> expressao MAIORIGUAL funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao MAIORIGUAL funcao 
-- On WRITE reduce production expressao -> expressao MAIORIGUAL funcao 
-- On WHILE reduce production expressao -> expressao MAIORIGUAL funcao 
-- On VIRG reduce production expressao -> expressao MAIORIGUAL funcao 
-- On TRUE reduce production expressao -> expressao MAIORIGUAL funcao 
-- On TO reduce production expressao -> expressao MAIORIGUAL funcao 
-- On THEN reduce production expressao -> expressao MAIORIGUAL funcao 
-- On READLN reduce production expressao -> expressao MAIORIGUAL funcao 
-- On READ reduce production expressao -> expressao MAIORIGUAL funcao 
-- On PTVIRG reduce production expressao -> expressao MAIORIGUAL funcao 
-- On OULOG reduce production expressao -> expressao MAIORIGUAL funcao 
-- On MULT reduce production expressao -> expressao MAIORIGUAL funcao 
-- On MENOS reduce production expressao -> expressao MAIORIGUAL funcao 
-- On MENORIGUAL reduce production expressao -> expressao MAIORIGUAL funcao 
-- On MENOR reduce production expressao -> expressao MAIORIGUAL funcao 
-- On MAIS reduce production expressao -> expressao MAIORIGUAL funcao 
-- On MAIORIGUAL reduce production expressao -> expressao MAIORIGUAL funcao 
-- On MAIOR reduce production expressao -> expressao MAIORIGUAL funcao 
-- On LITSTRING reduce production expressao -> expressao MAIORIGUAL funcao 
-- On LITCHAR reduce production expressao -> expressao MAIORIGUAL funcao 
-- On INT reduce production expressao -> expressao MAIORIGUAL funcao 
-- On IGUAL reduce production expressao -> expressao MAIORIGUAL funcao 
-- On IF reduce production expressao -> expressao MAIORIGUAL funcao 
-- On ID reduce production expressao -> expressao MAIORIGUAL funcao 
-- On FPAR reduce production expressao -> expressao MAIORIGUAL funcao 
-- On FOR reduce production expressao -> expressao MAIORIGUAL funcao 
-- On FLOAT reduce production expressao -> expressao MAIORIGUAL funcao 
-- On FESCOP reduce production expressao -> expressao MAIORIGUAL funcao 
-- On FALSE reduce production expressao -> expressao MAIORIGUAL funcao 
-- On ELOG reduce production expressao -> expressao MAIORIGUAL funcao 
-- On DO reduce production expressao -> expressao MAIORIGUAL funcao 
-- On DIV reduce production expressao -> expressao MAIORIGUAL funcao 
-- On DIF reduce production expressao -> expressao MAIORIGUAL funcao 
-- On CASE reduce production expressao -> expressao MAIORIGUAL funcao 

State 78:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MAIORIGUAL expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MAIS shift to state 70
-- On DIV shift to state 64
-- On WRITELN reduce production expressao -> expressao MAIORIGUAL expressao 
-- On WRITE reduce production expressao -> expressao MAIORIGUAL expressao 
-- On WHILE reduce production expressao -> expressao MAIORIGUAL expressao 
-- On VIRG reduce production expressao -> expressao MAIORIGUAL expressao 
-- On TRUE reduce production expressao -> expressao MAIORIGUAL expressao 
-- On TO reduce production expressao -> expressao MAIORIGUAL expressao 
-- On THEN reduce production expressao -> expressao MAIORIGUAL expressao 
-- On READLN reduce production expressao -> expressao MAIORIGUAL expressao 
-- On READ reduce production expressao -> expressao MAIORIGUAL expressao 
-- On PTVIRG reduce production expressao -> expressao MAIORIGUAL expressao 
-- On OULOG reduce production expressao -> expressao MAIORIGUAL expressao 
-- On MENORIGUAL reduce production expressao -> expressao MAIORIGUAL expressao 
-- On MENOR reduce production expressao -> expressao MAIORIGUAL expressao 
-- On MAIORIGUAL reduce production expressao -> expressao MAIORIGUAL expressao 
-- On MAIOR reduce production expressao -> expressao MAIORIGUAL expressao 
-- On LITSTRING reduce production expressao -> expressao MAIORIGUAL expressao 
-- On LITCHAR reduce production expressao -> expressao MAIORIGUAL expressao 
-- On INT reduce production expressao -> expressao MAIORIGUAL expressao 
-- On IGUAL reduce production expressao -> expressao MAIORIGUAL expressao 
-- On IF reduce production expressao -> expressao MAIORIGUAL expressao 
-- On ID reduce production expressao -> expressao MAIORIGUAL expressao 
-- On FPAR reduce production expressao -> expressao MAIORIGUAL expressao 
-- On FOR reduce production expressao -> expressao MAIORIGUAL expressao 
-- On FLOAT reduce production expressao -> expressao MAIORIGUAL expressao 
-- On FESCOP reduce production expressao -> expressao MAIORIGUAL expressao 
-- On FALSE reduce production expressao -> expressao MAIORIGUAL expressao 
-- On ELOG reduce production expressao -> expressao MAIORIGUAL expressao 
-- On DO reduce production expressao -> expressao MAIORIGUAL expressao 
-- On DIF reduce production expressao -> expressao MAIORIGUAL expressao 
-- On CASE reduce production expressao -> expressao MAIORIGUAL expressao 

State 79:
expressao -> expressao MAIOR . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MAIOR . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 80
-- On expressao shift to state 81
-- On entrada shift to state 57

State 80:
expressao -> expressao MAIOR funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao MAIOR funcao 
-- On WRITE reduce production expressao -> expressao MAIOR funcao 
-- On WHILE reduce production expressao -> expressao MAIOR funcao 
-- On VIRG reduce production expressao -> expressao MAIOR funcao 
-- On TRUE reduce production expressao -> expressao MAIOR funcao 
-- On TO reduce production expressao -> expressao MAIOR funcao 
-- On THEN reduce production expressao -> expressao MAIOR funcao 
-- On READLN reduce production expressao -> expressao MAIOR funcao 
-- On READ reduce production expressao -> expressao MAIOR funcao 
-- On PTVIRG reduce production expressao -> expressao MAIOR funcao 
-- On OULOG reduce production expressao -> expressao MAIOR funcao 
-- On MULT reduce production expressao -> expressao MAIOR funcao 
-- On MENOS reduce production expressao -> expressao MAIOR funcao 
-- On MENORIGUAL reduce production expressao -> expressao MAIOR funcao 
-- On MENOR reduce production expressao -> expressao MAIOR funcao 
-- On MAIS reduce production expressao -> expressao MAIOR funcao 
-- On MAIORIGUAL reduce production expressao -> expressao MAIOR funcao 
-- On MAIOR reduce production expressao -> expressao MAIOR funcao 
-- On LITSTRING reduce production expressao -> expressao MAIOR funcao 
-- On LITCHAR reduce production expressao -> expressao MAIOR funcao 
-- On INT reduce production expressao -> expressao MAIOR funcao 
-- On IGUAL reduce production expressao -> expressao MAIOR funcao 
-- On IF reduce production expressao -> expressao MAIOR funcao 
-- On ID reduce production expressao -> expressao MAIOR funcao 
-- On FPAR reduce production expressao -> expressao MAIOR funcao 
-- On FOR reduce production expressao -> expressao MAIOR funcao 
-- On FLOAT reduce production expressao -> expressao MAIOR funcao 
-- On FESCOP reduce production expressao -> expressao MAIOR funcao 
-- On FALSE reduce production expressao -> expressao MAIOR funcao 
-- On ELOG reduce production expressao -> expressao MAIOR funcao 
-- On DO reduce production expressao -> expressao MAIOR funcao 
-- On DIV reduce production expressao -> expressao MAIOR funcao 
-- On DIF reduce production expressao -> expressao MAIOR funcao 
-- On CASE reduce production expressao -> expressao MAIOR funcao 

State 81:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao MAIOR expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MAIS shift to state 70
-- On DIV shift to state 64
-- On WRITELN reduce production expressao -> expressao MAIOR expressao 
-- On WRITE reduce production expressao -> expressao MAIOR expressao 
-- On WHILE reduce production expressao -> expressao MAIOR expressao 
-- On VIRG reduce production expressao -> expressao MAIOR expressao 
-- On TRUE reduce production expressao -> expressao MAIOR expressao 
-- On TO reduce production expressao -> expressao MAIOR expressao 
-- On THEN reduce production expressao -> expressao MAIOR expressao 
-- On READLN reduce production expressao -> expressao MAIOR expressao 
-- On READ reduce production expressao -> expressao MAIOR expressao 
-- On PTVIRG reduce production expressao -> expressao MAIOR expressao 
-- On OULOG reduce production expressao -> expressao MAIOR expressao 
-- On MENORIGUAL reduce production expressao -> expressao MAIOR expressao 
-- On MENOR reduce production expressao -> expressao MAIOR expressao 
-- On MAIORIGUAL reduce production expressao -> expressao MAIOR expressao 
-- On MAIOR reduce production expressao -> expressao MAIOR expressao 
-- On LITSTRING reduce production expressao -> expressao MAIOR expressao 
-- On LITCHAR reduce production expressao -> expressao MAIOR expressao 
-- On INT reduce production expressao -> expressao MAIOR expressao 
-- On IGUAL reduce production expressao -> expressao MAIOR expressao 
-- On IF reduce production expressao -> expressao MAIOR expressao 
-- On ID reduce production expressao -> expressao MAIOR expressao 
-- On FPAR reduce production expressao -> expressao MAIOR expressao 
-- On FOR reduce production expressao -> expressao MAIOR expressao 
-- On FLOAT reduce production expressao -> expressao MAIOR expressao 
-- On FESCOP reduce production expressao -> expressao MAIOR expressao 
-- On FALSE reduce production expressao -> expressao MAIOR expressao 
-- On ELOG reduce production expressao -> expressao MAIOR expressao 
-- On DO reduce production expressao -> expressao MAIOR expressao 
-- On DIF reduce production expressao -> expressao MAIOR expressao 
-- On CASE reduce production expressao -> expressao MAIOR expressao 

State 82:
expressao -> expressao IGUAL . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao IGUAL . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 83
-- On expressao shift to state 84
-- On entrada shift to state 57

State 83:
expressao -> expressao IGUAL funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao IGUAL funcao 
-- On WRITE reduce production expressao -> expressao IGUAL funcao 
-- On WHILE reduce production expressao -> expressao IGUAL funcao 
-- On VIRG reduce production expressao -> expressao IGUAL funcao 
-- On TRUE reduce production expressao -> expressao IGUAL funcao 
-- On TO reduce production expressao -> expressao IGUAL funcao 
-- On THEN reduce production expressao -> expressao IGUAL funcao 
-- On READLN reduce production expressao -> expressao IGUAL funcao 
-- On READ reduce production expressao -> expressao IGUAL funcao 
-- On PTVIRG reduce production expressao -> expressao IGUAL funcao 
-- On OULOG reduce production expressao -> expressao IGUAL funcao 
-- On MULT reduce production expressao -> expressao IGUAL funcao 
-- On MENOS reduce production expressao -> expressao IGUAL funcao 
-- On MENORIGUAL reduce production expressao -> expressao IGUAL funcao 
-- On MENOR reduce production expressao -> expressao IGUAL funcao 
-- On MAIS reduce production expressao -> expressao IGUAL funcao 
-- On MAIORIGUAL reduce production expressao -> expressao IGUAL funcao 
-- On MAIOR reduce production expressao -> expressao IGUAL funcao 
-- On LITSTRING reduce production expressao -> expressao IGUAL funcao 
-- On LITCHAR reduce production expressao -> expressao IGUAL funcao 
-- On INT reduce production expressao -> expressao IGUAL funcao 
-- On IGUAL reduce production expressao -> expressao IGUAL funcao 
-- On IF reduce production expressao -> expressao IGUAL funcao 
-- On ID reduce production expressao -> expressao IGUAL funcao 
-- On FPAR reduce production expressao -> expressao IGUAL funcao 
-- On FOR reduce production expressao -> expressao IGUAL funcao 
-- On FLOAT reduce production expressao -> expressao IGUAL funcao 
-- On FESCOP reduce production expressao -> expressao IGUAL funcao 
-- On FALSE reduce production expressao -> expressao IGUAL funcao 
-- On ELOG reduce production expressao -> expressao IGUAL funcao 
-- On DO reduce production expressao -> expressao IGUAL funcao 
-- On DIV reduce production expressao -> expressao IGUAL funcao 
-- On DIF reduce production expressao -> expressao IGUAL funcao 
-- On CASE reduce production expressao -> expressao IGUAL funcao 

State 84:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao IGUAL expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MENORIGUAL shift to state 67
-- On MENOR shift to state 73
-- On MAIS shift to state 70
-- On MAIORIGUAL shift to state 76
-- On MAIOR shift to state 79
-- On DIV shift to state 64
-- On WRITELN reduce production expressao -> expressao IGUAL expressao 
-- On WRITE reduce production expressao -> expressao IGUAL expressao 
-- On WHILE reduce production expressao -> expressao IGUAL expressao 
-- On VIRG reduce production expressao -> expressao IGUAL expressao 
-- On TRUE reduce production expressao -> expressao IGUAL expressao 
-- On TO reduce production expressao -> expressao IGUAL expressao 
-- On THEN reduce production expressao -> expressao IGUAL expressao 
-- On READLN reduce production expressao -> expressao IGUAL expressao 
-- On READ reduce production expressao -> expressao IGUAL expressao 
-- On PTVIRG reduce production expressao -> expressao IGUAL expressao 
-- On OULOG reduce production expressao -> expressao IGUAL expressao 
-- On LITSTRING reduce production expressao -> expressao IGUAL expressao 
-- On LITCHAR reduce production expressao -> expressao IGUAL expressao 
-- On INT reduce production expressao -> expressao IGUAL expressao 
-- On IGUAL reduce production expressao -> expressao IGUAL expressao 
-- On IF reduce production expressao -> expressao IGUAL expressao 
-- On ID reduce production expressao -> expressao IGUAL expressao 
-- On FPAR reduce production expressao -> expressao IGUAL expressao 
-- On FOR reduce production expressao -> expressao IGUAL expressao 
-- On FLOAT reduce production expressao -> expressao IGUAL expressao 
-- On FESCOP reduce production expressao -> expressao IGUAL expressao 
-- On FALSE reduce production expressao -> expressao IGUAL expressao 
-- On ELOG reduce production expressao -> expressao IGUAL expressao 
-- On DO reduce production expressao -> expressao IGUAL expressao 
-- On DIF reduce production expressao -> expressao IGUAL expressao 
-- On CASE reduce production expressao -> expressao IGUAL expressao 

State 85:
expressao -> expressao ELOG . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao ELOG . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 86
-- On expressao shift to state 87
-- On entrada shift to state 57

State 86:
expressao -> expressao ELOG funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao ELOG funcao 
-- On WRITE reduce production expressao -> expressao ELOG funcao 
-- On WHILE reduce production expressao -> expressao ELOG funcao 
-- On VIRG reduce production expressao -> expressao ELOG funcao 
-- On TRUE reduce production expressao -> expressao ELOG funcao 
-- On TO reduce production expressao -> expressao ELOG funcao 
-- On THEN reduce production expressao -> expressao ELOG funcao 
-- On READLN reduce production expressao -> expressao ELOG funcao 
-- On READ reduce production expressao -> expressao ELOG funcao 
-- On PTVIRG reduce production expressao -> expressao ELOG funcao 
-- On OULOG reduce production expressao -> expressao ELOG funcao 
-- On MULT reduce production expressao -> expressao ELOG funcao 
-- On MENOS reduce production expressao -> expressao ELOG funcao 
-- On MENORIGUAL reduce production expressao -> expressao ELOG funcao 
-- On MENOR reduce production expressao -> expressao ELOG funcao 
-- On MAIS reduce production expressao -> expressao ELOG funcao 
-- On MAIORIGUAL reduce production expressao -> expressao ELOG funcao 
-- On MAIOR reduce production expressao -> expressao ELOG funcao 
-- On LITSTRING reduce production expressao -> expressao ELOG funcao 
-- On LITCHAR reduce production expressao -> expressao ELOG funcao 
-- On INT reduce production expressao -> expressao ELOG funcao 
-- On IGUAL reduce production expressao -> expressao ELOG funcao 
-- On IF reduce production expressao -> expressao ELOG funcao 
-- On ID reduce production expressao -> expressao ELOG funcao 
-- On FPAR reduce production expressao -> expressao ELOG funcao 
-- On FOR reduce production expressao -> expressao ELOG funcao 
-- On FLOAT reduce production expressao -> expressao ELOG funcao 
-- On FESCOP reduce production expressao -> expressao ELOG funcao 
-- On FALSE reduce production expressao -> expressao ELOG funcao 
-- On ELOG reduce production expressao -> expressao ELOG funcao 
-- On DO reduce production expressao -> expressao ELOG funcao 
-- On DIV reduce production expressao -> expressao ELOG funcao 
-- On DIF reduce production expressao -> expressao ELOG funcao 
-- On CASE reduce production expressao -> expressao ELOG funcao 

State 87:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao ELOG expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MENORIGUAL shift to state 67
-- On MENOR shift to state 73
-- On MAIS shift to state 70
-- On MAIORIGUAL shift to state 76
-- On MAIOR shift to state 79
-- On IGUAL shift to state 82
-- On DIV shift to state 64
-- On DIF shift to state 88
-- On WRITELN reduce production expressao -> expressao ELOG expressao 
-- On WRITE reduce production expressao -> expressao ELOG expressao 
-- On WHILE reduce production expressao -> expressao ELOG expressao 
-- On VIRG reduce production expressao -> expressao ELOG expressao 
-- On TRUE reduce production expressao -> expressao ELOG expressao 
-- On TO reduce production expressao -> expressao ELOG expressao 
-- On THEN reduce production expressao -> expressao ELOG expressao 
-- On READLN reduce production expressao -> expressao ELOG expressao 
-- On READ reduce production expressao -> expressao ELOG expressao 
-- On PTVIRG reduce production expressao -> expressao ELOG expressao 
-- On OULOG reduce production expressao -> expressao ELOG expressao 
-- On LITSTRING reduce production expressao -> expressao ELOG expressao 
-- On LITCHAR reduce production expressao -> expressao ELOG expressao 
-- On INT reduce production expressao -> expressao ELOG expressao 
-- On IF reduce production expressao -> expressao ELOG expressao 
-- On ID reduce production expressao -> expressao ELOG expressao 
-- On FPAR reduce production expressao -> expressao ELOG expressao 
-- On FOR reduce production expressao -> expressao ELOG expressao 
-- On FLOAT reduce production expressao -> expressao ELOG expressao 
-- On FESCOP reduce production expressao -> expressao ELOG expressao 
-- On FALSE reduce production expressao -> expressao ELOG expressao 
-- On ELOG reduce production expressao -> expressao ELOG expressao 
-- On DO reduce production expressao -> expressao ELOG expressao 
-- On CASE reduce production expressao -> expressao ELOG expressao 

State 88:
expressao -> expressao DIF . expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao DIF . funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 89
-- On expressao shift to state 90
-- On entrada shift to state 57

State 89:
expressao -> expressao DIF funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao DIF funcao 
-- On WRITE reduce production expressao -> expressao DIF funcao 
-- On WHILE reduce production expressao -> expressao DIF funcao 
-- On VIRG reduce production expressao -> expressao DIF funcao 
-- On TRUE reduce production expressao -> expressao DIF funcao 
-- On TO reduce production expressao -> expressao DIF funcao 
-- On THEN reduce production expressao -> expressao DIF funcao 
-- On READLN reduce production expressao -> expressao DIF funcao 
-- On READ reduce production expressao -> expressao DIF funcao 
-- On PTVIRG reduce production expressao -> expressao DIF funcao 
-- On OULOG reduce production expressao -> expressao DIF funcao 
-- On MULT reduce production expressao -> expressao DIF funcao 
-- On MENOS reduce production expressao -> expressao DIF funcao 
-- On MENORIGUAL reduce production expressao -> expressao DIF funcao 
-- On MENOR reduce production expressao -> expressao DIF funcao 
-- On MAIS reduce production expressao -> expressao DIF funcao 
-- On MAIORIGUAL reduce production expressao -> expressao DIF funcao 
-- On MAIOR reduce production expressao -> expressao DIF funcao 
-- On LITSTRING reduce production expressao -> expressao DIF funcao 
-- On LITCHAR reduce production expressao -> expressao DIF funcao 
-- On INT reduce production expressao -> expressao DIF funcao 
-- On IGUAL reduce production expressao -> expressao DIF funcao 
-- On IF reduce production expressao -> expressao DIF funcao 
-- On ID reduce production expressao -> expressao DIF funcao 
-- On FPAR reduce production expressao -> expressao DIF funcao 
-- On FOR reduce production expressao -> expressao DIF funcao 
-- On FLOAT reduce production expressao -> expressao DIF funcao 
-- On FESCOP reduce production expressao -> expressao DIF funcao 
-- On FALSE reduce production expressao -> expressao DIF funcao 
-- On ELOG reduce production expressao -> expressao DIF funcao 
-- On DO reduce production expressao -> expressao DIF funcao 
-- On DIV reduce production expressao -> expressao DIF funcao 
-- On DIF reduce production expressao -> expressao DIF funcao 
-- On CASE reduce production expressao -> expressao DIF funcao 

State 90:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao DIF expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MENORIGUAL shift to state 67
-- On MENOR shift to state 73
-- On MAIS shift to state 70
-- On MAIORIGUAL shift to state 76
-- On MAIOR shift to state 79
-- On DIV shift to state 64
-- On WRITELN reduce production expressao -> expressao DIF expressao 
-- On WRITE reduce production expressao -> expressao DIF expressao 
-- On WHILE reduce production expressao -> expressao DIF expressao 
-- On VIRG reduce production expressao -> expressao DIF expressao 
-- On TRUE reduce production expressao -> expressao DIF expressao 
-- On TO reduce production expressao -> expressao DIF expressao 
-- On THEN reduce production expressao -> expressao DIF expressao 
-- On READLN reduce production expressao -> expressao DIF expressao 
-- On READ reduce production expressao -> expressao DIF expressao 
-- On PTVIRG reduce production expressao -> expressao DIF expressao 
-- On OULOG reduce production expressao -> expressao DIF expressao 
-- On LITSTRING reduce production expressao -> expressao DIF expressao 
-- On LITCHAR reduce production expressao -> expressao DIF expressao 
-- On INT reduce production expressao -> expressao DIF expressao 
-- On IGUAL reduce production expressao -> expressao DIF expressao 
-- On IF reduce production expressao -> expressao DIF expressao 
-- On ID reduce production expressao -> expressao DIF expressao 
-- On FPAR reduce production expressao -> expressao DIF expressao 
-- On FOR reduce production expressao -> expressao DIF expressao 
-- On FLOAT reduce production expressao -> expressao DIF expressao 
-- On FESCOP reduce production expressao -> expressao DIF expressao 
-- On FALSE reduce production expressao -> expressao DIF expressao 
-- On ELOG reduce production expressao -> expressao DIF expressao 
-- On DO reduce production expressao -> expressao DIF expressao 
-- On DIF reduce production expressao -> expressao DIF expressao 
-- On CASE reduce production expressao -> expressao DIF expressao 

State 91:
expressao -> expressao OULOG funcao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> expressao OULOG funcao 
-- On WRITE reduce production expressao -> expressao OULOG funcao 
-- On WHILE reduce production expressao -> expressao OULOG funcao 
-- On VIRG reduce production expressao -> expressao OULOG funcao 
-- On TRUE reduce production expressao -> expressao OULOG funcao 
-- On TO reduce production expressao -> expressao OULOG funcao 
-- On THEN reduce production expressao -> expressao OULOG funcao 
-- On READLN reduce production expressao -> expressao OULOG funcao 
-- On READ reduce production expressao -> expressao OULOG funcao 
-- On PTVIRG reduce production expressao -> expressao OULOG funcao 
-- On OULOG reduce production expressao -> expressao OULOG funcao 
-- On MULT reduce production expressao -> expressao OULOG funcao 
-- On MENOS reduce production expressao -> expressao OULOG funcao 
-- On MENORIGUAL reduce production expressao -> expressao OULOG funcao 
-- On MENOR reduce production expressao -> expressao OULOG funcao 
-- On MAIS reduce production expressao -> expressao OULOG funcao 
-- On MAIORIGUAL reduce production expressao -> expressao OULOG funcao 
-- On MAIOR reduce production expressao -> expressao OULOG funcao 
-- On LITSTRING reduce production expressao -> expressao OULOG funcao 
-- On LITCHAR reduce production expressao -> expressao OULOG funcao 
-- On INT reduce production expressao -> expressao OULOG funcao 
-- On IGUAL reduce production expressao -> expressao OULOG funcao 
-- On IF reduce production expressao -> expressao OULOG funcao 
-- On ID reduce production expressao -> expressao OULOG funcao 
-- On FPAR reduce production expressao -> expressao OULOG funcao 
-- On FOR reduce production expressao -> expressao OULOG funcao 
-- On FLOAT reduce production expressao -> expressao OULOG funcao 
-- On FESCOP reduce production expressao -> expressao OULOG funcao 
-- On FALSE reduce production expressao -> expressao OULOG funcao 
-- On ELOG reduce production expressao -> expressao OULOG funcao 
-- On DO reduce production expressao -> expressao OULOG funcao 
-- On DIV reduce production expressao -> expressao OULOG funcao 
-- On DIF reduce production expressao -> expressao OULOG funcao 
-- On CASE reduce production expressao -> expressao OULOG funcao 

State 92:
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao OULOG expressao . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MENORIGUAL shift to state 67
-- On MENOR shift to state 73
-- On MAIS shift to state 70
-- On MAIORIGUAL shift to state 76
-- On MAIOR shift to state 79
-- On IGUAL shift to state 82
-- On ELOG shift to state 85
-- On DIV shift to state 64
-- On DIF shift to state 88
-- On WRITELN reduce production expressao -> expressao OULOG expressao 
-- On WRITE reduce production expressao -> expressao OULOG expressao 
-- On WHILE reduce production expressao -> expressao OULOG expressao 
-- On VIRG reduce production expressao -> expressao OULOG expressao 
-- On TRUE reduce production expressao -> expressao OULOG expressao 
-- On TO reduce production expressao -> expressao OULOG expressao 
-- On THEN reduce production expressao -> expressao OULOG expressao 
-- On READLN reduce production expressao -> expressao OULOG expressao 
-- On READ reduce production expressao -> expressao OULOG expressao 
-- On PTVIRG reduce production expressao -> expressao OULOG expressao 
-- On OULOG reduce production expressao -> expressao OULOG expressao 
-- On LITSTRING reduce production expressao -> expressao OULOG expressao 
-- On LITCHAR reduce production expressao -> expressao OULOG expressao 
-- On INT reduce production expressao -> expressao OULOG expressao 
-- On IF reduce production expressao -> expressao OULOG expressao 
-- On ID reduce production expressao -> expressao OULOG expressao 
-- On FPAR reduce production expressao -> expressao OULOG expressao 
-- On FOR reduce production expressao -> expressao OULOG expressao 
-- On FLOAT reduce production expressao -> expressao OULOG expressao 
-- On FESCOP reduce production expressao -> expressao OULOG expressao 
-- On FALSE reduce production expressao -> expressao OULOG expressao 
-- On DO reduce production expressao -> expressao OULOG expressao 
-- On CASE reduce production expressao -> expressao OULOG expressao 

State 93:
expressao -> APAR expressao FPAR . [ WRITELN WRITE WHILE VIRG TRUE TO THEN READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FPAR FOR FLOAT FESCOP FALSE ELOG DO DIV DIF CASE ]
-- On WRITELN reduce production expressao -> APAR expressao FPAR 
-- On WRITE reduce production expressao -> APAR expressao FPAR 
-- On WHILE reduce production expressao -> APAR expressao FPAR 
-- On VIRG reduce production expressao -> APAR expressao FPAR 
-- On TRUE reduce production expressao -> APAR expressao FPAR 
-- On TO reduce production expressao -> APAR expressao FPAR 
-- On THEN reduce production expressao -> APAR expressao FPAR 
-- On READLN reduce production expressao -> APAR expressao FPAR 
-- On READ reduce production expressao -> APAR expressao FPAR 
-- On PTVIRG reduce production expressao -> APAR expressao FPAR 
-- On OULOG reduce production expressao -> APAR expressao FPAR 
-- On MULT reduce production expressao -> APAR expressao FPAR 
-- On MENOS reduce production expressao -> APAR expressao FPAR 
-- On MENORIGUAL reduce production expressao -> APAR expressao FPAR 
-- On MENOR reduce production expressao -> APAR expressao FPAR 
-- On MAIS reduce production expressao -> APAR expressao FPAR 
-- On MAIORIGUAL reduce production expressao -> APAR expressao FPAR 
-- On MAIOR reduce production expressao -> APAR expressao FPAR 
-- On LITSTRING reduce production expressao -> APAR expressao FPAR 
-- On LITCHAR reduce production expressao -> APAR expressao FPAR 
-- On INT reduce production expressao -> APAR expressao FPAR 
-- On IGUAL reduce production expressao -> APAR expressao FPAR 
-- On IF reduce production expressao -> APAR expressao FPAR 
-- On ID reduce production expressao -> APAR expressao FPAR 
-- On FPAR reduce production expressao -> APAR expressao FPAR 
-- On FOR reduce production expressao -> APAR expressao FPAR 
-- On FLOAT reduce production expressao -> APAR expressao FPAR 
-- On FESCOP reduce production expressao -> APAR expressao FPAR 
-- On FALSE reduce production expressao -> APAR expressao FPAR 
-- On ELOG reduce production expressao -> APAR expressao FPAR 
-- On DO reduce production expressao -> APAR expressao FPAR 
-- On DIV reduce production expressao -> APAR expressao FPAR 
-- On DIF reduce production expressao -> APAR expressao FPAR 
-- On CASE reduce production expressao -> APAR expressao FPAR 

State 94:
comando_while -> WHILE expressao . DO AESCOP nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
expressao -> expressao . MAIS expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MENOS expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . IGUAL expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . DIV expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MAIOR expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MENOR expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MULT expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MENORIGUAL expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MAIORIGUAL expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . DIF expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . OULOG expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . ELOG expressao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MAIS funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MENOS funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . IGUAL funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . DIV funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MAIOR funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MENOR funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MULT funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MENORIGUAL funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . MAIORIGUAL funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . DIF funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . OULOG funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
expressao -> expressao . ELOG funcao [ OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DO DIV DIF ]
-- On OULOG shift to state 49
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MENORIGUAL shift to state 67
-- On MENOR shift to state 73
-- On MAIS shift to state 70
-- On MAIORIGUAL shift to state 76
-- On MAIOR shift to state 79
-- On IGUAL shift to state 82
-- On ELOG shift to state 85
-- On DO shift to state 95
-- On DIV shift to state 64
-- On DIF shift to state 88

State 95:
comando_while -> WHILE expressao DO . AESCOP nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On AESCOP shift to state 96

State 96:
comando_while -> WHILE expressao DO AESCOP . nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN shift to state 26
-- On WRITE shift to state 42
-- On WHILE shift to state 46
-- On READLN shift to state 97
-- On READ shift to state 101
-- On IF shift to state 105
-- On ID shift to state 109
-- On FOR shift to state 118
-- On CASE shift to state 124
-- On nonempty_list(comando) shift to state 156
-- On comando_while shift to state 130
-- On comando_se shift to state 131
-- On comando_saida shift to state 132
-- On comando_for shift to state 134
-- On comando_entrada shift to state 135
-- On comando_case shift to state 137
-- On comando_atribuicao shift to state 138
-- On comando shift to state 141

State 97:
comando_entrada -> READLN . APAR ID FPAR [ PTVIRG ]
-- On APAR shift to state 98

State 98:
comando_entrada -> READLN APAR . ID FPAR [ PTVIRG ]
-- On ID shift to state 99

State 99:
comando_entrada -> READLN APAR ID . FPAR [ PTVIRG ]
-- On FPAR shift to state 100

State 100:
comando_entrada -> READLN APAR ID FPAR . [ PTVIRG ]
-- On PTVIRG reduce production comando_entrada -> READLN APAR ID FPAR 

State 101:
comando_entrada -> READ . APAR ID FPAR [ PTVIRG ]
-- On APAR shift to state 102

State 102:
comando_entrada -> READ APAR . ID FPAR [ PTVIRG ]
-- On ID shift to state 103

State 103:
comando_entrada -> READ APAR ID . FPAR [ PTVIRG ]
-- On FPAR shift to state 104

State 104:
comando_entrada -> READ APAR ID FPAR . [ PTVIRG ]
-- On PTVIRG reduce production comando_entrada -> READ APAR ID FPAR 

State 105:
comando_se -> IF . expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 32
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On expressao shift to state 106
-- On entrada shift to state 57

State 106:
comando_se -> IF expressao . THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
expressao -> expressao . MAIS expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MENOS expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . IGUAL expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . DIV expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MAIOR expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MENOR expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MULT expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MENORIGUAL expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MAIORIGUAL expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . DIF expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . OULOG expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . ELOG expressao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MAIS funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MENOS funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . IGUAL funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . DIV funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MAIOR funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MENOR funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MULT funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MENORIGUAL funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . MAIORIGUAL funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . DIF funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . OULOG funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
expressao -> expressao . ELOG funcao [ THEN OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIF ]
-- On THEN shift to state 107
-- On OULOG shift to state 49
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MENORIGUAL shift to state 67
-- On MENOR shift to state 73
-- On MAIS shift to state 70
-- On MAIORIGUAL shift to state 76
-- On MAIOR shift to state 79
-- On IGUAL shift to state 82
-- On ELOG shift to state 85
-- On DIV shift to state 64
-- On DIF shift to state 88

State 107:
comando_se -> IF expressao THEN . AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On AESCOP shift to state 108

State 108:
comando_se -> IF expressao THEN AESCOP . nonempty_list(comando) FESCOP option(__anonymous_0) [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN shift to state 26
-- On WRITE shift to state 42
-- On WHILE shift to state 46
-- On READLN shift to state 97
-- On READ shift to state 101
-- On IF shift to state 105
-- On ID shift to state 109
-- On FOR shift to state 118
-- On CASE shift to state 124
-- On nonempty_list(comando) shift to state 149
-- On comando_while shift to state 130
-- On comando_se shift to state 131
-- On comando_saida shift to state 132
-- On comando_for shift to state 134
-- On comando_entrada shift to state 135
-- On comando_case shift to state 137
-- On comando_atribuicao shift to state 138
-- On comando shift to state 141

State 109:
comando_atribuicao -> ID . ATRIB atribuicoes [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On ATRIB shift to state 110

State 110:
comando_atribuicao -> ID ATRIB . atribuicoes [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 50
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 111
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On funcao shift to state 115
-- On expressao shift to state 116
-- On entrada shift to state 57
-- On atribuicoes shift to state 117

State 111:
atribuicoes -> APAR . MENOS tipo_primitivo FPAR [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
expressao -> APAR . expressao FPAR [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
-- On TRUE shift to state 28
-- On MENOS shift to state 112
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On ID shift to state 32
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On APAR shift to state 47
-- On tipo_primitivo shift to state 35
-- On tipo_bool shift to state 36
-- On expressao shift to state 48
-- On entrada shift to state 57

State 112:
atribuicoes -> APAR MENOS . tipo_primitivo FPAR [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On tipo_primitivo shift to state 113
-- On tipo_bool shift to state 36

State 113:
atribuicoes -> APAR MENOS tipo_primitivo . FPAR [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On FPAR shift to state 114

State 114:
atribuicoes -> APAR MENOS tipo_primitivo FPAR . [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On WRITE reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On WHILE reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On TRUE reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On TO reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On READLN reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On READ reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On PTVIRG reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On LITSTRING reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On LITCHAR reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On INT reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On IF reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On ID reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On FOR reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On FLOAT reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On FESCOP reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On FALSE reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 
-- On CASE reduce production atribuicoes -> APAR MENOS tipo_primitivo FPAR 

State 115:
atribuicoes -> funcao . [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production atribuicoes -> funcao 
-- On WRITE reduce production atribuicoes -> funcao 
-- On WHILE reduce production atribuicoes -> funcao 
-- On TRUE reduce production atribuicoes -> funcao 
-- On TO reduce production atribuicoes -> funcao 
-- On READLN reduce production atribuicoes -> funcao 
-- On READ reduce production atribuicoes -> funcao 
-- On PTVIRG reduce production atribuicoes -> funcao 
-- On LITSTRING reduce production atribuicoes -> funcao 
-- On LITCHAR reduce production atribuicoes -> funcao 
-- On INT reduce production atribuicoes -> funcao 
-- On IF reduce production atribuicoes -> funcao 
-- On ID reduce production atribuicoes -> funcao 
-- On FOR reduce production atribuicoes -> funcao 
-- On FLOAT reduce production atribuicoes -> funcao 
-- On FESCOP reduce production atribuicoes -> funcao 
-- On FALSE reduce production atribuicoes -> funcao 
-- On CASE reduce production atribuicoes -> funcao 

State 116:
atribuicoes -> expressao . [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
expressao -> expressao . MAIS expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MENOS expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . IGUAL expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . DIV expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MAIOR expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MENOR expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MULT expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MENORIGUAL expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . DIF expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . OULOG expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . ELOG expressao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MAIS funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MENOS funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . IGUAL funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . DIV funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MAIOR funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MENOR funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MULT funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MENORIGUAL funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . MAIORIGUAL funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . DIF funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . OULOG funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
expressao -> expressao . ELOG funcao [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG OULOG MULT MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR LITSTRING LITCHAR INT IGUAL IF ID FOR FLOAT FESCOP FALSE ELOG DIV DIF CASE ]
-- On OULOG shift to state 49
-- On MULT shift to state 58
-- On MENOS shift to state 61
-- On MENORIGUAL shift to state 67
-- On MENOR shift to state 73
-- On MAIS shift to state 70
-- On MAIORIGUAL shift to state 76
-- On MAIOR shift to state 79
-- On IGUAL shift to state 82
-- On ELOG shift to state 85
-- On DIV shift to state 64
-- On DIF shift to state 88
-- On WRITELN reduce production atribuicoes -> expressao 
-- On WRITE reduce production atribuicoes -> expressao 
-- On WHILE reduce production atribuicoes -> expressao 
-- On TRUE reduce production atribuicoes -> expressao 
-- On TO reduce production atribuicoes -> expressao 
-- On READLN reduce production atribuicoes -> expressao 
-- On READ reduce production atribuicoes -> expressao 
-- On PTVIRG reduce production atribuicoes -> expressao 
-- On LITSTRING reduce production atribuicoes -> expressao 
-- On LITCHAR reduce production atribuicoes -> expressao 
-- On INT reduce production atribuicoes -> expressao 
-- On IF reduce production atribuicoes -> expressao 
-- On ID reduce production atribuicoes -> expressao 
-- On FOR reduce production atribuicoes -> expressao 
-- On FLOAT reduce production atribuicoes -> expressao 
-- On FESCOP reduce production atribuicoes -> expressao 
-- On FALSE reduce production atribuicoes -> expressao 
-- On CASE reduce production atribuicoes -> expressao 

State 117:
comando_atribuicao -> ID ATRIB atribuicoes . [ WRITELN WRITE WHILE TRUE TO READLN READ PTVIRG LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On WRITE reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On WHILE reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On TRUE reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On TO reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On READLN reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On READ reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On PTVIRG reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On LITSTRING reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On LITCHAR reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On INT reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On IF reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On ID reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On FOR reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On FLOAT reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On FESCOP reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On FALSE reduce production comando_atribuicao -> ID ATRIB atribuicoes 
-- On CASE reduce production comando_atribuicao -> ID ATRIB atribuicoes 

State 118:
comando_for -> FOR . comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On ID shift to state 109
-- On comando_atribuicao shift to state 119

State 119:
comando_for -> FOR comando_atribuicao . TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On TO shift to state 120

State 120:
comando_for -> FOR comando_atribuicao TO . tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On tipo_primitivo shift to state 121
-- On tipo_bool shift to state 36

State 121:
comando_for -> FOR comando_atribuicao TO tipo_primitivo . DO AESCOP nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On DO shift to state 122

State 122:
comando_for -> FOR comando_atribuicao TO tipo_primitivo DO . AESCOP nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On AESCOP shift to state 123

State 123:
comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP . nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN shift to state 26
-- On WRITE shift to state 42
-- On WHILE shift to state 46
-- On READLN shift to state 97
-- On READ shift to state 101
-- On IF shift to state 105
-- On ID shift to state 109
-- On FOR shift to state 118
-- On CASE shift to state 124
-- On nonempty_list(comando) shift to state 147
-- On comando_while shift to state 130
-- On comando_se shift to state 131
-- On comando_saida shift to state 132
-- On comando_for shift to state 134
-- On comando_entrada shift to state 135
-- On comando_case shift to state 137
-- On comando_atribuicao shift to state 138
-- On comando shift to state 141

State 124:
comando_case -> CASE . ID OF nonempty_list(case) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On ID shift to state 125

State 125:
comando_case -> CASE ID . OF nonempty_list(case) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On OF shift to state 126

State 126:
comando_case -> CASE ID OF . nonempty_list(case) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On tipo_primitivo shift to state 127
-- On tipo_bool shift to state 36
-- On nonempty_list(case) shift to state 143
-- On case shift to state 145

State 127:
case -> tipo_primitivo . DPTS nonempty_list(comando) [ TRUE LITSTRING LITCHAR INT FLOAT FESCOP FALSE ]
-- On DPTS shift to state 128

State 128:
case -> tipo_primitivo DPTS . nonempty_list(comando) [ TRUE LITSTRING LITCHAR INT FLOAT FESCOP FALSE ]
-- On WRITELN shift to state 26
-- On WRITE shift to state 42
-- On WHILE shift to state 46
-- On READLN shift to state 97
-- On READ shift to state 101
-- On IF shift to state 105
-- On ID shift to state 109
-- On FOR shift to state 118
-- On CASE shift to state 124
-- On nonempty_list(comando) shift to state 129
-- On comando_while shift to state 130
-- On comando_se shift to state 131
-- On comando_saida shift to state 132
-- On comando_for shift to state 134
-- On comando_entrada shift to state 135
-- On comando_case shift to state 137
-- On comando_atribuicao shift to state 138
-- On comando shift to state 141

State 129:
case -> tipo_primitivo DPTS nonempty_list(comando) . [ TRUE LITSTRING LITCHAR INT FLOAT FESCOP FALSE ]
-- On TRUE reduce production case -> tipo_primitivo DPTS nonempty_list(comando) 
-- On LITSTRING reduce production case -> tipo_primitivo DPTS nonempty_list(comando) 
-- On LITCHAR reduce production case -> tipo_primitivo DPTS nonempty_list(comando) 
-- On INT reduce production case -> tipo_primitivo DPTS nonempty_list(comando) 
-- On FLOAT reduce production case -> tipo_primitivo DPTS nonempty_list(comando) 
-- On FESCOP reduce production case -> tipo_primitivo DPTS nonempty_list(comando) 
-- On FALSE reduce production case -> tipo_primitivo DPTS nonempty_list(comando) 

State 130:
comando -> comando_while . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando -> comando_while 
-- On WRITE reduce production comando -> comando_while 
-- On WHILE reduce production comando -> comando_while 
-- On TRUE reduce production comando -> comando_while 
-- On READLN reduce production comando -> comando_while 
-- On READ reduce production comando -> comando_while 
-- On LITSTRING reduce production comando -> comando_while 
-- On LITCHAR reduce production comando -> comando_while 
-- On INT reduce production comando -> comando_while 
-- On IF reduce production comando -> comando_while 
-- On ID reduce production comando -> comando_while 
-- On FOR reduce production comando -> comando_while 
-- On FLOAT reduce production comando -> comando_while 
-- On FESCOP reduce production comando -> comando_while 
-- On FALSE reduce production comando -> comando_while 
-- On CASE reduce production comando -> comando_while 

State 131:
comando -> comando_se . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando -> comando_se 
-- On WRITE reduce production comando -> comando_se 
-- On WHILE reduce production comando -> comando_se 
-- On TRUE reduce production comando -> comando_se 
-- On READLN reduce production comando -> comando_se 
-- On READ reduce production comando -> comando_se 
-- On LITSTRING reduce production comando -> comando_se 
-- On LITCHAR reduce production comando -> comando_se 
-- On INT reduce production comando -> comando_se 
-- On IF reduce production comando -> comando_se 
-- On ID reduce production comando -> comando_se 
-- On FOR reduce production comando -> comando_se 
-- On FLOAT reduce production comando -> comando_se 
-- On FESCOP reduce production comando -> comando_se 
-- On FALSE reduce production comando -> comando_se 
-- On CASE reduce production comando -> comando_se 

State 132:
comando -> comando_saida . PTVIRG [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On PTVIRG shift to state 133

State 133:
comando -> comando_saida PTVIRG . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando -> comando_saida PTVIRG 
-- On WRITE reduce production comando -> comando_saida PTVIRG 
-- On WHILE reduce production comando -> comando_saida PTVIRG 
-- On TRUE reduce production comando -> comando_saida PTVIRG 
-- On READLN reduce production comando -> comando_saida PTVIRG 
-- On READ reduce production comando -> comando_saida PTVIRG 
-- On LITSTRING reduce production comando -> comando_saida PTVIRG 
-- On LITCHAR reduce production comando -> comando_saida PTVIRG 
-- On INT reduce production comando -> comando_saida PTVIRG 
-- On IF reduce production comando -> comando_saida PTVIRG 
-- On ID reduce production comando -> comando_saida PTVIRG 
-- On FOR reduce production comando -> comando_saida PTVIRG 
-- On FLOAT reduce production comando -> comando_saida PTVIRG 
-- On FESCOP reduce production comando -> comando_saida PTVIRG 
-- On FALSE reduce production comando -> comando_saida PTVIRG 
-- On CASE reduce production comando -> comando_saida PTVIRG 

State 134:
comando -> comando_for . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando -> comando_for 
-- On WRITE reduce production comando -> comando_for 
-- On WHILE reduce production comando -> comando_for 
-- On TRUE reduce production comando -> comando_for 
-- On READLN reduce production comando -> comando_for 
-- On READ reduce production comando -> comando_for 
-- On LITSTRING reduce production comando -> comando_for 
-- On LITCHAR reduce production comando -> comando_for 
-- On INT reduce production comando -> comando_for 
-- On IF reduce production comando -> comando_for 
-- On ID reduce production comando -> comando_for 
-- On FOR reduce production comando -> comando_for 
-- On FLOAT reduce production comando -> comando_for 
-- On FESCOP reduce production comando -> comando_for 
-- On FALSE reduce production comando -> comando_for 
-- On CASE reduce production comando -> comando_for 

State 135:
comando -> comando_entrada . PTVIRG [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On PTVIRG shift to state 136

State 136:
comando -> comando_entrada PTVIRG . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando -> comando_entrada PTVIRG 
-- On WRITE reduce production comando -> comando_entrada PTVIRG 
-- On WHILE reduce production comando -> comando_entrada PTVIRG 
-- On TRUE reduce production comando -> comando_entrada PTVIRG 
-- On READLN reduce production comando -> comando_entrada PTVIRG 
-- On READ reduce production comando -> comando_entrada PTVIRG 
-- On LITSTRING reduce production comando -> comando_entrada PTVIRG 
-- On LITCHAR reduce production comando -> comando_entrada PTVIRG 
-- On INT reduce production comando -> comando_entrada PTVIRG 
-- On IF reduce production comando -> comando_entrada PTVIRG 
-- On ID reduce production comando -> comando_entrada PTVIRG 
-- On FOR reduce production comando -> comando_entrada PTVIRG 
-- On FLOAT reduce production comando -> comando_entrada PTVIRG 
-- On FESCOP reduce production comando -> comando_entrada PTVIRG 
-- On FALSE reduce production comando -> comando_entrada PTVIRG 
-- On CASE reduce production comando -> comando_entrada PTVIRG 

State 137:
comando -> comando_case . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando -> comando_case 
-- On WRITE reduce production comando -> comando_case 
-- On WHILE reduce production comando -> comando_case 
-- On TRUE reduce production comando -> comando_case 
-- On READLN reduce production comando -> comando_case 
-- On READ reduce production comando -> comando_case 
-- On LITSTRING reduce production comando -> comando_case 
-- On LITCHAR reduce production comando -> comando_case 
-- On INT reduce production comando -> comando_case 
-- On IF reduce production comando -> comando_case 
-- On ID reduce production comando -> comando_case 
-- On FOR reduce production comando -> comando_case 
-- On FLOAT reduce production comando -> comando_case 
-- On FESCOP reduce production comando -> comando_case 
-- On FALSE reduce production comando -> comando_case 
-- On CASE reduce production comando -> comando_case 

State 138:
comando -> comando_atribuicao . option(PTVIRG) [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On PTVIRG shift to state 139
-- On option(PTVIRG) shift to state 140
-- On WRITELN reduce production option(PTVIRG) -> 
-- On WRITE reduce production option(PTVIRG) -> 
-- On WHILE reduce production option(PTVIRG) -> 
-- On TRUE reduce production option(PTVIRG) -> 
-- On READLN reduce production option(PTVIRG) -> 
-- On READ reduce production option(PTVIRG) -> 
-- On LITSTRING reduce production option(PTVIRG) -> 
-- On LITCHAR reduce production option(PTVIRG) -> 
-- On INT reduce production option(PTVIRG) -> 
-- On IF reduce production option(PTVIRG) -> 
-- On ID reduce production option(PTVIRG) -> 
-- On FOR reduce production option(PTVIRG) -> 
-- On FLOAT reduce production option(PTVIRG) -> 
-- On FESCOP reduce production option(PTVIRG) -> 
-- On FALSE reduce production option(PTVIRG) -> 
-- On CASE reduce production option(PTVIRG) -> 

State 139:
option(PTVIRG) -> PTVIRG . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production option(PTVIRG) -> PTVIRG 
-- On WRITE reduce production option(PTVIRG) -> PTVIRG 
-- On WHILE reduce production option(PTVIRG) -> PTVIRG 
-- On TRUE reduce production option(PTVIRG) -> PTVIRG 
-- On READLN reduce production option(PTVIRG) -> PTVIRG 
-- On READ reduce production option(PTVIRG) -> PTVIRG 
-- On LITSTRING reduce production option(PTVIRG) -> PTVIRG 
-- On LITCHAR reduce production option(PTVIRG) -> PTVIRG 
-- On INT reduce production option(PTVIRG) -> PTVIRG 
-- On IF reduce production option(PTVIRG) -> PTVIRG 
-- On ID reduce production option(PTVIRG) -> PTVIRG 
-- On FOR reduce production option(PTVIRG) -> PTVIRG 
-- On FLOAT reduce production option(PTVIRG) -> PTVIRG 
-- On FESCOP reduce production option(PTVIRG) -> PTVIRG 
-- On FALSE reduce production option(PTVIRG) -> PTVIRG 
-- On CASE reduce production option(PTVIRG) -> PTVIRG 

State 140:
comando -> comando_atribuicao option(PTVIRG) . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On WRITE reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On WHILE reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On TRUE reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On READLN reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On READ reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On LITSTRING reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On LITCHAR reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On INT reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On IF reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On ID reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On FOR reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On FLOAT reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On FESCOP reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On FALSE reduce production comando -> comando_atribuicao option(PTVIRG) 
-- On CASE reduce production comando -> comando_atribuicao option(PTVIRG) 

State 141:
nonempty_list(comando) -> comando . [ TRUE LITSTRING LITCHAR INT FLOAT FESCOP FALSE ]
nonempty_list(comando) -> comando . nonempty_list(comando) [ TRUE LITSTRING LITCHAR INT FLOAT FESCOP FALSE ]
-- On WRITELN shift to state 26
-- On WRITE shift to state 42
-- On WHILE shift to state 46
-- On READLN shift to state 97
-- On READ shift to state 101
-- On IF shift to state 105
-- On ID shift to state 109
-- On FOR shift to state 118
-- On CASE shift to state 124
-- On nonempty_list(comando) shift to state 142
-- On comando_while shift to state 130
-- On comando_se shift to state 131
-- On comando_saida shift to state 132
-- On comando_for shift to state 134
-- On comando_entrada shift to state 135
-- On comando_case shift to state 137
-- On comando_atribuicao shift to state 138
-- On comando shift to state 141
-- On TRUE reduce production nonempty_list(comando) -> comando 
-- On LITSTRING reduce production nonempty_list(comando) -> comando 
-- On LITCHAR reduce production nonempty_list(comando) -> comando 
-- On INT reduce production nonempty_list(comando) -> comando 
-- On FLOAT reduce production nonempty_list(comando) -> comando 
-- On FESCOP reduce production nonempty_list(comando) -> comando 
-- On FALSE reduce production nonempty_list(comando) -> comando 

State 142:
nonempty_list(comando) -> comando nonempty_list(comando) . [ TRUE LITSTRING LITCHAR INT FLOAT FESCOP FALSE ]
-- On TRUE reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On LITSTRING reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On LITCHAR reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On INT reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On FLOAT reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On FESCOP reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On FALSE reduce production nonempty_list(comando) -> comando nonempty_list(comando) 

State 143:
comando_case -> CASE ID OF nonempty_list(case) . FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On FESCOP shift to state 144

State 144:
comando_case -> CASE ID OF nonempty_list(case) FESCOP . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On WRITE reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On WHILE reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On TRUE reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On READLN reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On READ reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On LITSTRING reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On LITCHAR reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On INT reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On IF reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On ID reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On FOR reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On FLOAT reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On FESCOP reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On FALSE reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 
-- On CASE reduce production comando_case -> CASE ID OF nonempty_list(case) FESCOP 

State 145:
nonempty_list(case) -> case . [ FESCOP ]
nonempty_list(case) -> case . nonempty_list(case) [ FESCOP ]
-- On TRUE shift to state 28
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INT shift to state 31
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On tipo_primitivo shift to state 127
-- On tipo_bool shift to state 36
-- On nonempty_list(case) shift to state 146
-- On case shift to state 145
-- On FESCOP reduce production nonempty_list(case) -> case 

State 146:
nonempty_list(case) -> case nonempty_list(case) . [ FESCOP ]
-- On FESCOP reduce production nonempty_list(case) -> case nonempty_list(case) 

State 147:
comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) . FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On FESCOP shift to state 148

State 148:
comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On WRITE reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On WHILE reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On TRUE reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On READLN reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On READ reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On LITSTRING reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On LITCHAR reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On INT reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On IF reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On ID reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On FOR reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On FLOAT reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On FESCOP reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On FALSE reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 
-- On CASE reduce production comando_for -> FOR comando_atribuicao TO tipo_primitivo DO AESCOP nonempty_list(comando) FESCOP 

State 149:
comando_se -> IF expressao THEN AESCOP nonempty_list(comando) . FESCOP option(__anonymous_0) [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On FESCOP shift to state 150

State 150:
comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP . option(__anonymous_0) [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On ELSE shift to state 151
-- On option(__anonymous_0) shift to state 155
-- On WRITELN reduce production option(__anonymous_0) -> 
-- On WRITE reduce production option(__anonymous_0) -> 
-- On WHILE reduce production option(__anonymous_0) -> 
-- On TRUE reduce production option(__anonymous_0) -> 
-- On READLN reduce production option(__anonymous_0) -> 
-- On READ reduce production option(__anonymous_0) -> 
-- On LITSTRING reduce production option(__anonymous_0) -> 
-- On LITCHAR reduce production option(__anonymous_0) -> 
-- On INT reduce production option(__anonymous_0) -> 
-- On IF reduce production option(__anonymous_0) -> 
-- On ID reduce production option(__anonymous_0) -> 
-- On FOR reduce production option(__anonymous_0) -> 
-- On FLOAT reduce production option(__anonymous_0) -> 
-- On FESCOP reduce production option(__anonymous_0) -> 
-- On FALSE reduce production option(__anonymous_0) -> 
-- On CASE reduce production option(__anonymous_0) -> 

State 151:
option(__anonymous_0) -> ELSE . AESCOP nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On AESCOP shift to state 152

State 152:
option(__anonymous_0) -> ELSE AESCOP . nonempty_list(comando) FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN shift to state 26
-- On WRITE shift to state 42
-- On WHILE shift to state 46
-- On READLN shift to state 97
-- On READ shift to state 101
-- On IF shift to state 105
-- On ID shift to state 109
-- On FOR shift to state 118
-- On CASE shift to state 124
-- On nonempty_list(comando) shift to state 153
-- On comando_while shift to state 130
-- On comando_se shift to state 131
-- On comando_saida shift to state 132
-- On comando_for shift to state 134
-- On comando_entrada shift to state 135
-- On comando_case shift to state 137
-- On comando_atribuicao shift to state 138
-- On comando shift to state 141

State 153:
option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) . FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On FESCOP shift to state 154

State 154:
option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On WRITE reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On WHILE reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On TRUE reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On READLN reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On READ reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On LITSTRING reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On LITCHAR reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On INT reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On IF reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On ID reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On FOR reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On FLOAT reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On FESCOP reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On FALSE reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 
-- On CASE reduce production option(__anonymous_0) -> ELSE AESCOP nonempty_list(comando) FESCOP 

State 155:
comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On WRITE reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On WHILE reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On TRUE reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On READLN reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On READ reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On LITSTRING reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On LITCHAR reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On INT reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On IF reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On ID reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On FOR reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On FLOAT reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On FESCOP reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On FALSE reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 
-- On CASE reduce production comando_se -> IF expressao THEN AESCOP nonempty_list(comando) FESCOP option(__anonymous_0) 

State 156:
comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) . FESCOP [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On FESCOP shift to state 157

State 157:
comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP . [ WRITELN WRITE WHILE TRUE READLN READ LITSTRING LITCHAR INT IF ID FOR FLOAT FESCOP FALSE CASE ]
-- On WRITELN reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On WRITE reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On WHILE reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On TRUE reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On READLN reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On READ reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On LITSTRING reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On LITCHAR reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On INT reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On IF reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On ID reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On FOR reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On FLOAT reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On FESCOP reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On FALSE reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 
-- On CASE reduce production comando_while -> WHILE expressao DO AESCOP nonempty_list(comando) FESCOP 

State 158:
block_comando -> AESCOP list(comando) . FESCOP [ VAR EOF AESCOP ]
-- On FESCOP shift to state 159

State 159:
block_comando -> AESCOP list(comando) FESCOP . [ VAR EOF AESCOP ]
-- On VAR reduce production block_comando -> AESCOP list(comando) FESCOP 
-- On EOF reduce production block_comando -> AESCOP list(comando) FESCOP 
-- On AESCOP reduce production block_comando -> AESCOP list(comando) FESCOP 

State 160:
list(comando) -> comando . list(comando) [ FESCOP ]
-- On WRITELN shift to state 26
-- On WRITE shift to state 42
-- On WHILE shift to state 46
-- On READLN shift to state 97
-- On READ shift to state 101
-- On IF shift to state 105
-- On ID shift to state 109
-- On FOR shift to state 118
-- On CASE shift to state 124
-- On list(comando) shift to state 161
-- On comando_while shift to state 130
-- On comando_se shift to state 131
-- On comando_saida shift to state 132
-- On comando_for shift to state 134
-- On comando_entrada shift to state 135
-- On comando_case shift to state 137
-- On comando_atribuicao shift to state 138
-- On comando shift to state 160
-- On FESCOP reduce production list(comando) -> 

State 161:
list(comando) -> comando list(comando) . [ FESCOP ]
-- On FESCOP reduce production list(comando) -> comando list(comando) 

State 162:
declaracao_func -> FUNCTION ID nonempty_list(argumentos) DPTS tipo_nomenclatura PTVIRG block_comando . [ VAR AESCOP ]
-- On VAR reduce production declaracao_func -> FUNCTION ID nonempty_list(argumentos) DPTS tipo_nomenclatura PTVIRG block_comando 
-- On AESCOP reduce production declaracao_func -> FUNCTION ID nonempty_list(argumentos) DPTS tipo_nomenclatura PTVIRG block_comando 

State 163:
nonempty_list(argumentos) -> argumentos . [ DPTS ]
nonempty_list(argumentos) -> argumentos . nonempty_list(argumentos) [ DPTS ]
-- On APAR shift to state 8
-- On nonempty_list(argumentos) shift to state 164
-- On argumentos shift to state 163
-- On DPTS reduce production nonempty_list(argumentos) -> argumentos 

State 164:
nonempty_list(argumentos) -> argumentos nonempty_list(argumentos) . [ DPTS ]
-- On DPTS reduce production nonempty_list(argumentos) -> argumentos nonempty_list(argumentos) 

State 165:
prog -> declaracao_init option(declaracao_func) . option(declaracao_var_block) block_comando EOF [ # ]
-- On VAR shift to state 166
-- On option(declaracao_var_block) shift to state 176
-- On declaracao_var_block shift to state 179
-- On AESCOP reduce production option(declaracao_var_block) -> 

State 166:
declaracao_var_block -> VAR . list(declaracao_var) [ AESCOP ]
-- On ID shift to state 9
-- On separated_nonempty_list(VIRG,ID) shift to state 167
-- On list(declaracao_var) shift to state 173
-- On declaracao_var shift to state 174
-- On AESCOP reduce production list(declaracao_var) -> 

State 167:
declaracao_var -> separated_nonempty_list(VIRG,ID) . DPTS tipo PTVIRG [ ID AESCOP ]
-- On DPTS shift to state 168

State 168:
declaracao_var -> separated_nonempty_list(VIRG,ID) DPTS . tipo PTVIRG [ ID AESCOP ]
-- On TRUE shift to state 28
-- On STRING shift to state 14
-- On REAL shift to state 15
-- On LITSTRING shift to state 29
-- On LITCHAR shift to state 30
-- On INTEIRO shift to state 16
-- On INT shift to state 31
-- On FLOAT shift to state 33
-- On FALSE shift to state 34
-- On CHAR shift to state 17
-- On BOOLEANO shift to state 18
-- On tipo_primitivo shift to state 169
-- On tipo_nomenclatura shift to state 170
-- On tipo_bool shift to state 36
-- On tipo shift to state 171

State 169:
tipo -> tipo_primitivo . [ PTVIRG ]
-- On PTVIRG reduce production tipo -> tipo_primitivo 

State 170:
tipo -> tipo_nomenclatura . [ PTVIRG ]
-- On PTVIRG reduce production tipo -> tipo_nomenclatura 

State 171:
declaracao_var -> separated_nonempty_list(VIRG,ID) DPTS tipo . PTVIRG [ ID AESCOP ]
-- On PTVIRG shift to state 172

State 172:
declaracao_var -> separated_nonempty_list(VIRG,ID) DPTS tipo PTVIRG . [ ID AESCOP ]
-- On ID reduce production declaracao_var -> separated_nonempty_list(VIRG,ID) DPTS tipo PTVIRG 
-- On AESCOP reduce production declaracao_var -> separated_nonempty_list(VIRG,ID) DPTS tipo PTVIRG 

State 173:
declaracao_var_block -> VAR list(declaracao_var) . [ AESCOP ]
-- On AESCOP reduce production declaracao_var_block -> VAR list(declaracao_var) 

State 174:
list(declaracao_var) -> declaracao_var . list(declaracao_var) [ AESCOP ]
-- On ID shift to state 9
-- On separated_nonempty_list(VIRG,ID) shift to state 167
-- On list(declaracao_var) shift to state 175
-- On declaracao_var shift to state 174
-- On AESCOP reduce production list(declaracao_var) -> 

State 175:
list(declaracao_var) -> declaracao_var list(declaracao_var) . [ AESCOP ]
-- On AESCOP reduce production list(declaracao_var) -> declaracao_var list(declaracao_var) 

State 176:
prog -> declaracao_init option(declaracao_func) option(declaracao_var_block) . block_comando EOF [ # ]
-- On AESCOP shift to state 25
-- On block_comando shift to state 177

State 177:
prog -> declaracao_init option(declaracao_func) option(declaracao_var_block) block_comando . EOF [ # ]
-- On EOF shift to state 178

State 178:
prog -> declaracao_init option(declaracao_func) option(declaracao_var_block) block_comando EOF . [ # ]
-- On # reduce production prog -> declaracao_init option(declaracao_func) option(declaracao_var_block) block_comando EOF 

State 179:
option(declaracao_var_block) -> declaracao_var_block . [ AESCOP ]
-- On AESCOP reduce production option(declaracao_var_block) -> declaracao_var_block 

State 180:
option(declaracao_func) -> declaracao_func . [ VAR AESCOP ]
-- On VAR reduce production option(declaracao_func) -> declaracao_func 
-- On AESCOP reduce production option(declaracao_func) -> declaracao_func 

